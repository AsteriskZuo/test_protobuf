// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.proto

#include "IM.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppPushInfo_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppRecvMessage_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMBaseInfo_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMConversation_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMConversationBase_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMDeviceInfo_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMImage_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMMessage_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMMessageImage_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMMessageText_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMOfflinePushInfo_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_IM_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProtoIMSendMessage_IM_2eproto;
namespace im {
namespace citylife {
namespace proto {
class ProtoIMAppConnectParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppConnectParam> _instance;
} _ProtoIMAppConnectParam_default_instance_;
class ProtoIMBaseInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMBaseInfo> _instance;
} _ProtoIMBaseInfo_default_instance_;
class ProtoIMDeviceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMDeviceInfo> _instance;
} _ProtoIMDeviceInfo_default_instance_;
class ProtoIMConfigInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMConfigInfo> _instance;
} _ProtoIMConfigInfo_default_instance_;
class ProtoIMAppRecvMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppRecvMessage> _instance;
} _ProtoIMAppRecvMessage_default_instance_;
class ProtoIMAppRecvMessagesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppRecvMessages> _instance;
} _ProtoIMAppRecvMessages_default_instance_;
class ProtoIMAppSendMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppSendMessage> _instance;
} _ProtoIMAppSendMessage_default_instance_;
class ProtoIMAppPushInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppPushInfo> _instance;
} _ProtoIMAppPushInfo_default_instance_;
class ProtoIMAppSendMessageAsyncInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppSendMessageAsyncInfo> _instance;
} _ProtoIMAppSendMessageAsyncInfo_default_instance_;
class ProtoIMAppDownloadFileInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMAppDownloadFileInfo> _instance;
} _ProtoIMAppDownloadFileInfo_default_instance_;
class ProtoIMOfflinePushInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMOfflinePushInfo> _instance;
} _ProtoIMOfflinePushInfo_default_instance_;
class ProtoIMSendMessageAsyncInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMSendMessageAsyncInfo> _instance;
} _ProtoIMSendMessageAsyncInfo_default_instance_;
class ProtoIMSendMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMSendMessage> _instance;
} _ProtoIMSendMessage_default_instance_;
class ProtoIMMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMMessage> _instance;
} _ProtoIMMessage_default_instance_;
class ProtoIMConversationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMConversation> _instance;
} _ProtoIMConversation_default_instance_;
class ProtoIMConversationsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMConversations> _instance;
} _ProtoIMConversations_default_instance_;
class ProtoIMMessageExDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMMessageEx> _instance;
  const ::im::citylife::proto::ProtoIMMessageText* text_;
  const ::im::citylife::proto::ProtoIMMessageImage* image_;
} _ProtoIMMessageEx_default_instance_;
class ProtoIMConversationBaseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMConversationBase> _instance;
} _ProtoIMConversationBase_default_instance_;
class ProtoIMMessageTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMMessageText> _instance;
} _ProtoIMMessageText_default_instance_;
class ProtoIMImageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMImage> _instance;
} _ProtoIMImage_default_instance_;
class ProtoIMMessageImageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMMessageImage> _instance;
} _ProtoIMMessageImage_default_instance_;
class ProtoIMReturnResult_ResultEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMReturnResult_ResultEntry_DoNotUse> _instance;
} _ProtoIMReturnResult_ResultEntry_DoNotUse_default_instance_;
class ProtoIMReturnResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoIMReturnResult> _instance;
} _ProtoIMReturnResult_default_instance_;
}  // namespace proto
}  // namespace citylife
}  // namespace im
static void InitDefaultsscc_info_ProtoIMAppConnectParam_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppConnectParam_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppConnectParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppConnectParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMAppConnectParam_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMAppConnectParam_IM_2eproto}, {
      &scc_info_ProtoIMBaseInfo_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMAppDownloadFileInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppDownloadFileInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppDownloadFileInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppDownloadFileInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppDownloadFileInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMAppDownloadFileInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMAppPushInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppPushInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppPushInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppPushInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppPushInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMAppPushInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMAppRecvMessage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppRecvMessage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppRecvMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppRecvMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppRecvMessage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMAppRecvMessage_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMAppRecvMessages_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppRecvMessages_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppRecvMessages();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppRecvMessages::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMAppRecvMessages_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMAppRecvMessages_IM_2eproto}, {
      &scc_info_ProtoIMAppRecvMessage_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMAppSendMessage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppSendMessage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppSendMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppSendMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProtoIMAppSendMessage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProtoIMAppSendMessage_IM_2eproto}, {
      &scc_info_ProtoIMAppPushInfo_IM_2eproto.base,
      &scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMAppSendMessageAsyncInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMBaseInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMBaseInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMBaseInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMBaseInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMBaseInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMBaseInfo_IM_2eproto}, {
      &scc_info_ProtoIMDeviceInfo_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMConfigInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMConfigInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMConfigInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMConfigInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMConfigInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMConfigInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMConversation_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMConversation_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMConversation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMConversation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMConversation_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMConversation_IM_2eproto}, {
      &scc_info_ProtoIMSendMessage_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMConversationBase_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMConversationBase_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMConversationBase();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMConversationBase::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMConversationBase_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMConversationBase_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMConversations_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMConversations_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMConversations();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMConversations::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMConversations_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMConversations_IM_2eproto}, {
      &scc_info_ProtoIMConversation_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMDeviceInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMDeviceInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMDeviceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMDeviceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMDeviceInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMDeviceInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMImage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMImage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMImage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMImage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMImage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMImage_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMMessage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMMessage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMMessage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMMessage_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMMessageEx_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMMessageEx_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMMessageEx();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMMessageEx::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProtoIMMessageEx_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ProtoIMMessageEx_IM_2eproto}, {
      &scc_info_ProtoIMConversationBase_IM_2eproto.base,
      &scc_info_ProtoIMMessageText_IM_2eproto.base,
      &scc_info_ProtoIMMessageImage_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMMessageImage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMMessageImage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMMessageImage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMMessageImage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMMessageImage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMMessageImage_IM_2eproto}, {
      &scc_info_ProtoIMImage_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMMessageText_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMMessageText_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMMessageText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMMessageText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMMessageText_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMMessageText_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMOfflinePushInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMOfflinePushInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMOfflinePushInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMOfflinePushInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMOfflinePushInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMOfflinePushInfo_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMReturnResult_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMReturnResult_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMReturnResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMReturnResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoIMReturnResult_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoIMReturnResult_IM_2eproto}, {
      &scc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMReturnResult_ResultEntry_DoNotUse_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse();
  }
  ::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto}, {}};

static void InitDefaultsscc_info_ProtoIMSendMessage_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMSendMessage_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMSendMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMSendMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProtoIMSendMessage_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ProtoIMSendMessage_IM_2eproto}, {
      &scc_info_ProtoIMMessage_IM_2eproto.base,
      &scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto.base,
      &scc_info_ProtoIMOfflinePushInfo_IM_2eproto.base,}};

static void InitDefaultsscc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::citylife::proto::_ProtoIMSendMessageAsyncInfo_default_instance_;
    new (ptr) ::im::citylife::proto::ProtoIMSendMessageAsyncInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::citylife::proto::ProtoIMSendMessageAsyncInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_IM_2eproto[23];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_IM_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_IM_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_IM_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppConnectParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppConnectParam, token_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppConnectParam, deviceid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppConnectParam, packagename_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppConnectParam, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMBaseInfo, platform_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMBaseInfo, sdkversion_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMBaseInfo, deviceinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMDeviceInfo, osnameversion_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMDeviceInfo, network_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMDeviceInfo, networksp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, rootdir_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, databasedir_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, logdir_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, backgroundmode_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, navidomain_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, enablehttp2_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConfigInfo, loglevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, convtype_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, msgtype_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, fromid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, convid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, content_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, msgid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessage, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppRecvMessages, msgs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, type_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, content_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, pushinfo_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessage, asyncinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, pushcontent_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, pushdata_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, pushtitle_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, pushsubtitle_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppPushInfo, pushsound_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, localpath_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, serverurl_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, filetype_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, msgid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, senderid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, fileid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, localpath_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, url_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, filetype_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMAppDownloadFileInfo, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, pushcontent_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, pushdata_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, pushtitle_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, pushsubtitle_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMOfflinePushInfo, pushsound_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, local_path_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, url_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, file_type_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessageAsyncInfo, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessage, message_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessage, async_info_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMSendMessage, msg_push_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, msg_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, msg_type_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, issend_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, sender_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, receiver_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, msg_content_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessage, msg_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, conv_id_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, conv_type_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, timestamp_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, snapshot_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, last_msg_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, last_readed_msg_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, last_readed_msg_timestamp_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, unread_count_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversation, last_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversations, convs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, msg_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, conv_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, sender_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, receiver_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, timestamp_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, msg_status_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, extra_),
  offsetof(::im::citylife::proto::ProtoIMMessageExDefaultTypeInternal, text_),
  offsetof(::im::citylife::proto::ProtoIMMessageExDefaultTypeInternal, image_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageEx, test_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversationBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversationBase, conv_id_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMConversationBase, conv_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageText, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_type_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_size_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_heigh_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_width_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMImage, image_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, image_uuid_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, local_path_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, compress_level_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, format_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMMessageImage, images_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult, code_),
  PROTOBUF_FIELD_OFFSET(::im::citylife::proto::ProtoIMReturnResult, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::im::citylife::proto::ProtoIMAppConnectParam)},
  { 9, -1, sizeof(::im::citylife::proto::ProtoIMBaseInfo)},
  { 17, -1, sizeof(::im::citylife::proto::ProtoIMDeviceInfo)},
  { 25, -1, sizeof(::im::citylife::proto::ProtoIMConfigInfo)},
  { 37, -1, sizeof(::im::citylife::proto::ProtoIMAppRecvMessage)},
  { 49, -1, sizeof(::im::citylife::proto::ProtoIMAppRecvMessages)},
  { 55, -1, sizeof(::im::citylife::proto::ProtoIMAppSendMessage)},
  { 65, -1, sizeof(::im::citylife::proto::ProtoIMAppPushInfo)},
  { 75, -1, sizeof(::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo)},
  { 85, -1, sizeof(::im::citylife::proto::ProtoIMAppDownloadFileInfo)},
  { 97, -1, sizeof(::im::citylife::proto::ProtoIMOfflinePushInfo)},
  { 107, -1, sizeof(::im::citylife::proto::ProtoIMSendMessageAsyncInfo)},
  { 117, -1, sizeof(::im::citylife::proto::ProtoIMSendMessage)},
  { 125, -1, sizeof(::im::citylife::proto::ProtoIMMessage)},
  { 138, -1, sizeof(::im::citylife::proto::ProtoIMConversation)},
  { 152, -1, sizeof(::im::citylife::proto::ProtoIMConversations)},
  { 158, -1, sizeof(::im::citylife::proto::ProtoIMMessageEx)},
  { 173, -1, sizeof(::im::citylife::proto::ProtoIMConversationBase)},
  { 180, -1, sizeof(::im::citylife::proto::ProtoIMMessageText)},
  { 186, -1, sizeof(::im::citylife::proto::ProtoIMImage)},
  { 197, -1, sizeof(::im::citylife::proto::ProtoIMMessageImage)},
  { 207, 214, sizeof(::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse)},
  { 216, -1, sizeof(::im::citylife::proto::ProtoIMReturnResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppConnectParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMBaseInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMDeviceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMConfigInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppRecvMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppRecvMessages_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppSendMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppPushInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppSendMessageAsyncInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMAppDownloadFileInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMOfflinePushInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMSendMessageAsyncInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMSendMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMConversation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMConversations_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMMessageEx_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMConversationBase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMMessageText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMImage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMMessageImage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMReturnResult_ResultEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::im::citylife::proto::_ProtoIMReturnResult_default_instance_),
};

const char descriptor_table_protodef_IM_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010IM.proto\022\021im.citylife.proto\"\200\001\n\026ProtoI"
  "MAppConnectParam\022\r\n\005token\030\001 \001(\t\022\020\n\010devic"
  "eId\030\002 \001(\t\022\023\n\013packageName\030\003 \001(\t\0220\n\004info\030\004"
  " \001(\0132\".im.citylife.proto.ProtoIMBaseInfo"
  "\"q\n\017ProtoIMBaseInfo\022\020\n\010platform\030\001 \001(\t\022\022\n"
  "\nsdkVersion\030\002 \001(\t\0228\n\ndeviceInfo\030\003 \001(\0132$."
  "im.citylife.proto.ProtoIMDeviceInfo\"N\n\021P"
  "rotoIMDeviceInfo\022\025\n\rosNameVersion\030\001 \001(\t\022"
  "\017\n\007network\030\002 \001(\t\022\021\n\tnetworkSp\030\003 \001(\t\"\234\001\n\021"
  "ProtoIMConfigInfo\022\017\n\007rootDir\030\001 \001(\t\022\023\n\013da"
  "tabaseDir\030\002 \001(\t\022\016\n\006logDir\030\003 \001(\t\022\026\n\016backg"
  "roundMode\030\004 \001(\005\022\022\n\nnaviDomain\030\005 \001(\t\022\023\n\013e"
  "nableHttp2\030\006 \001(\010\022\020\n\010logLevel\030\007 \001(\005\"\215\001\n\025P"
  "rotoIMAppRecvMessage\022\020\n\010convType\030\001 \001(\005\022\017"
  "\n\007msgType\030\002 \001(\t\022\016\n\006fromId\030\003 \001(\t\022\016\n\006convI"
  "d\030\004 \001(\t\022\017\n\007content\030\005 \001(\t\022\r\n\005msgId\030\006 \001(\t\022"
  "\021\n\ttimestamp\030\007 \001(\003\"P\n\026ProtoIMAppRecvMess"
  "ages\0226\n\004msgs\030\001 \003(\0132(.im.citylife.proto.P"
  "rotoIMAppRecvMessage\"\303\001\n\025ProtoIMAppSendM"
  "essage\022\014\n\004uuid\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\017\n\007co"
  "ntent\030\003 \001(\t\0227\n\010pushInfo\030\004 \001(\0132%.im.cityl"
  "ife.proto.ProtoIMAppPushInfo\022D\n\tasyncInf"
  "o\030\005 \001(\01321.im.citylife.proto.ProtoIMAppSe"
  "ndMessageAsyncInfo\"w\n\022ProtoIMAppPushInfo"
  "\022\023\n\013pushContent\030\001 \001(\t\022\020\n\010pushData\030\002 \001(\t\022"
  "\021\n\tpushTitle\030\003 \001(\t\022\024\n\014pushSubtitle\030\004 \001(\t"
  "\022\021\n\tpushSound\030\005 \001(\t\"y\n\036ProtoIMAppSendMes"
  "sageAsyncInfo\022\014\n\004uuid\030\001 \001(\t\022\021\n\tlocalPath"
  "\030\002 \001(\t\022\021\n\tserverUrl\030\003 \001(\t\022\020\n\010fileType\030\004 "
  "\001(\t\022\021\n\ttimestamp\030\005 \001(\003\"\222\001\n\032ProtoIMAppDow"
  "nloadFileInfo\022\r\n\005msgId\030\001 \001(\t\022\020\n\010senderId"
  "\030\002 \001(\t\022\016\n\006fileId\030\003 \001(\t\022\021\n\tlocalPath\030\004 \001("
  "\t\022\013\n\003url\030\005 \001(\t\022\020\n\010fileType\030\006 \001(\t\022\021\n\ttime"
  "stamp\030\007 \001(\003\"{\n\026ProtoIMOfflinePushInfo\022\023\n"
  "\013pushcontent\030\001 \001(\t\022\020\n\010pushdata\030\002 \001(\t\022\021\n\t"
  "pushtitle\030\003 \001(\t\022\024\n\014pushsubtitle\030\004 \001(\t\022\021\n"
  "\tpushsound\030\005 \001(\t\"r\n\033ProtoIMSendMessageAs"
  "yncInfo\022\014\n\004uuid\030\001 \001(\t\022\022\n\nlocal_path\030\002 \001("
  "\t\022\013\n\003url\030\003 \001(\t\022\021\n\tfile_type\030\004 \001(\t\022\021\n\ttim"
  "estamp\030\005 \001(\003\"\321\001\n\022ProtoIMSendMessage\0222\n\007m"
  "essage\030\001 \001(\0132!.im.citylife.proto.ProtoIM"
  "Message\022E\n\nasync_info\030\002 \001(\01321.im.citylif"
  "e.proto.ProtoIMAppSendMessageAsyncInfo\022@"
  "\n\rmsg_push_info\030\003 \001(\0132).im.citylife.prot"
  "o.ProtoIMOfflinePushInfo\"\313\001\n\016ProtoIMMess"
  "age\022\020\n\010msg_uuid\030\001 \001(\t\022\020\n\010msg_type\030\002 \001(\t\022"
  "\016\n\006isSend\030\003 \001(\010\022\016\n\006sender\030\004 \001(\t\022\020\n\010recei"
  "ver\030\005 \001(\t\022\023\n\013msg_content\030\006 \001(\t\022\021\n\ttimest"
  "amp\030\007 \001(\003\022;\n\nmsg_status\030\010 \001(\0162\'.im.cityl"
  "ife.proto.ProtoIMMessageStatus\"\205\002\n\023Proto"
  "IMConversation\022\017\n\007conv_id\030\001 \001(\t\022\021\n\tconv_"
  "type\030\002 \001(\005\022\021\n\ttimestamp\030\003 \001(\003\022\020\n\010snapsho"
  "t\030\004 \001(\t\022\025\n\rlast_msg_uuid\030\005 \001(\t\022\034\n\024last_r"
  "eaded_msg_uuid\030\006 \001(\t\022!\n\031last_readed_msg_"
  "timestamp\030\007 \001(\003\022\024\n\014unread_count\030\010 \001(\005\0227\n"
  "\010last_msg\030\t \001(\0132%.im.citylife.proto.Prot"
  "oIMSendMessage\"M\n\024ProtoIMConversations\0225"
  "\n\005convs\030\001 \003(\0132&.im.citylife.proto.ProtoI"
  "MConversation\"\335\002\n\020ProtoIMMessageEx\022\020\n\010ms"
  "g_uuid\030\001 \001(\t\0228\n\004conv\030\002 \001(\0132*.im.citylife"
  ".proto.ProtoIMConversationBase\022\016\n\006sender"
  "\030\004 \001(\t\022\020\n\010receiver\030\005 \001(\t\022\021\n\ttimestamp\030\006 "
  "\001(\003\022;\n\nmsg_status\030\007 \001(\0162\'.im.citylife.pr"
  "oto.ProtoIMMessageStatus\022\r\n\005extra\030\010 \001(\t\022"
  "5\n\004text\030\020 \001(\0132%.im.citylife.proto.ProtoI"
  "MMessageTextH\000\0227\n\005image\030\021 \001(\0132&.im.cityl"
  "ife.proto.ProtoIMMessageImageH\000B\014\n\ntest_"
  "oneof\"=\n\027ProtoIMConversationBase\022\017\n\007conv"
  "_id\030\001 \001(\t\022\021\n\tconv_type\030\002 \001(\005\"%\n\022ProtoIMM"
  "essageText\022\017\n\007content\030\001 \001(\t\"\207\001\n\014ProtoIMI"
  "mage\022\022\n\nimage_uuid\030\001 \001(\t\022\022\n\nimage_type\030\002"
  " \001(\005\022\022\n\nimage_size\030\003 \001(\005\022\023\n\013image_heigh\030"
  "\004 \001(\005\022\023\n\013image_width\030\005 \001(\005\022\021\n\timage_url\030"
  "\006 \001(\t\"\226\001\n\023ProtoIMMessageImage\022\022\n\nimage_u"
  "uid\030\001 \001(\t\022\022\n\nlocal_path\030\002 \001(\t\022\026\n\016compres"
  "s_level\030\003 \001(\005\022\016\n\006format\030\004 \001(\005\022/\n\006images\030"
  "\005 \003(\0132\037.im.citylife.proto.ProtoIMImage\"\226"
  "\001\n\023ProtoIMReturnResult\022\014\n\004code\030\001 \001(\003\022B\n\006"
  "result\030\002 \003(\01322.im.citylife.proto.ProtoIM"
  "ReturnResult.ResultEntry\032-\n\013ResultEntry\022"
  "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*n\n\024Proto"
  "IMMessageStatus\022\010\n\004Init\020\000\022\013\n\007Sending\020\001\022\017"
  "\n\013SendSuccess\020\002\022\016\n\nSendFailed\020\003\022\016\n\nHasDe"
  "leted\020\004\022\016\n\nHasRevoked\020\005B\033\n\022com.citylife."
  "imsdkB\005IMSDKb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_IM_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_IM_2eproto_sccs[23] = {
  &scc_info_ProtoIMAppConnectParam_IM_2eproto.base,
  &scc_info_ProtoIMAppDownloadFileInfo_IM_2eproto.base,
  &scc_info_ProtoIMAppPushInfo_IM_2eproto.base,
  &scc_info_ProtoIMAppRecvMessage_IM_2eproto.base,
  &scc_info_ProtoIMAppRecvMessages_IM_2eproto.base,
  &scc_info_ProtoIMAppSendMessage_IM_2eproto.base,
  &scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto.base,
  &scc_info_ProtoIMBaseInfo_IM_2eproto.base,
  &scc_info_ProtoIMConfigInfo_IM_2eproto.base,
  &scc_info_ProtoIMConversation_IM_2eproto.base,
  &scc_info_ProtoIMConversationBase_IM_2eproto.base,
  &scc_info_ProtoIMConversations_IM_2eproto.base,
  &scc_info_ProtoIMDeviceInfo_IM_2eproto.base,
  &scc_info_ProtoIMImage_IM_2eproto.base,
  &scc_info_ProtoIMMessage_IM_2eproto.base,
  &scc_info_ProtoIMMessageEx_IM_2eproto.base,
  &scc_info_ProtoIMMessageImage_IM_2eproto.base,
  &scc_info_ProtoIMMessageText_IM_2eproto.base,
  &scc_info_ProtoIMOfflinePushInfo_IM_2eproto.base,
  &scc_info_ProtoIMReturnResult_IM_2eproto.base,
  &scc_info_ProtoIMReturnResult_ResultEntry_DoNotUse_IM_2eproto.base,
  &scc_info_ProtoIMSendMessage_IM_2eproto.base,
  &scc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_IM_2eproto_once;
static bool descriptor_table_IM_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IM_2eproto = {
  &descriptor_table_IM_2eproto_initialized, descriptor_table_protodef_IM_2eproto, "IM.proto", 3380,
  &descriptor_table_IM_2eproto_once, descriptor_table_IM_2eproto_sccs, descriptor_table_IM_2eproto_deps, 23, 0,
  schemas, file_default_instances, TableStruct_IM_2eproto::offsets,
  file_level_metadata_IM_2eproto, 23, file_level_enum_descriptors_IM_2eproto, file_level_service_descriptors_IM_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_IM_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_IM_2eproto), true);
namespace im {
namespace citylife {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoIMMessageStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_IM_2eproto);
  return file_level_enum_descriptors_IM_2eproto[0];
}
bool ProtoIMMessageStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ProtoIMAppConnectParam::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMAppConnectParam_default_instance_._instance.get_mutable()->info_ = const_cast< ::im::citylife::proto::ProtoIMBaseInfo*>(
      ::im::citylife::proto::ProtoIMBaseInfo::internal_default_instance());
}
class ProtoIMAppConnectParam::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMBaseInfo& info(const ProtoIMAppConnectParam* msg);
};

const ::im::citylife::proto::ProtoIMBaseInfo&
ProtoIMAppConnectParam::_Internal::info(const ProtoIMAppConnectParam* msg) {
  return *msg->info_;
}
ProtoIMAppConnectParam::ProtoIMAppConnectParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppConnectParam)
}
ProtoIMAppConnectParam::ProtoIMAppConnectParam(const ProtoIMAppConnectParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_deviceid().empty()) {
    deviceid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  packagename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_packagename().empty()) {
    packagename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from._internal_has_info()) {
    info_ = new ::im::citylife::proto::ProtoIMBaseInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppConnectParam)
}

void ProtoIMAppConnectParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppConnectParam_IM_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  packagename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_ = nullptr;
}

ProtoIMAppConnectParam::~ProtoIMAppConnectParam() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppConnectParam)
  SharedDtor();
}

void ProtoIMAppConnectParam::SharedDtor() {
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  packagename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void ProtoIMAppConnectParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppConnectParam& ProtoIMAppConnectParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppConnectParam_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppConnectParam::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppConnectParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  packagename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ProtoIMAppConnectParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppConnectParam.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string deviceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_deviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppConnectParam.deviceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string packageName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_packagename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppConnectParam.packageName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMBaseInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppConnectParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppConnectParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppConnectParam.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_deviceid().data(), static_cast<int>(this->_internal_deviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppConnectParam.deviceId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_deviceid(), target);
  }

  // string packageName = 3;
  if (this->packagename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_packagename().data(), static_cast<int>(this->_internal_packagename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppConnectParam.packageName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_packagename(), target);
  }

  // .im.citylife.proto.ProtoIMBaseInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppConnectParam)
  return target;
}

size_t ProtoIMAppConnectParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppConnectParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_deviceid());
  }

  // string packageName = 3;
  if (this->packagename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_packagename());
  }

  // .im.citylife.proto.ProtoIMBaseInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppConnectParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppConnectParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppConnectParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppConnectParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppConnectParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppConnectParam)
    MergeFrom(*source);
  }
}

void ProtoIMAppConnectParam::MergeFrom(const ProtoIMAppConnectParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppConnectParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.packagename().size() > 0) {

    packagename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from.has_info()) {
    _internal_mutable_info()->::im::citylife::proto::ProtoIMBaseInfo::MergeFrom(from._internal_info());
  }
}

void ProtoIMAppConnectParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppConnectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppConnectParam::CopyFrom(const ProtoIMAppConnectParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppConnectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppConnectParam::IsInitialized() const {
  return true;
}

void ProtoIMAppConnectParam::InternalSwap(ProtoIMAppConnectParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deviceid_.Swap(&other->deviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  packagename_.Swap(&other->packagename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppConnectParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMBaseInfo::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMBaseInfo_default_instance_._instance.get_mutable()->deviceinfo_ = const_cast< ::im::citylife::proto::ProtoIMDeviceInfo*>(
      ::im::citylife::proto::ProtoIMDeviceInfo::internal_default_instance());
}
class ProtoIMBaseInfo::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMDeviceInfo& deviceinfo(const ProtoIMBaseInfo* msg);
};

const ::im::citylife::proto::ProtoIMDeviceInfo&
ProtoIMBaseInfo::_Internal::deviceinfo(const ProtoIMBaseInfo* msg) {
  return *msg->deviceinfo_;
}
ProtoIMBaseInfo::ProtoIMBaseInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMBaseInfo)
}
ProtoIMBaseInfo::ProtoIMBaseInfo(const ProtoIMBaseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_platform().empty()) {
    platform_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  sdkversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sdkversion().empty()) {
    sdkversion_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sdkversion_);
  }
  if (from._internal_has_deviceinfo()) {
    deviceinfo_ = new ::im::citylife::proto::ProtoIMDeviceInfo(*from.deviceinfo_);
  } else {
    deviceinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMBaseInfo)
}

void ProtoIMBaseInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMBaseInfo_IM_2eproto.base);
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdkversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceinfo_ = nullptr;
}

ProtoIMBaseInfo::~ProtoIMBaseInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMBaseInfo)
  SharedDtor();
}

void ProtoIMBaseInfo::SharedDtor() {
  platform_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdkversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deviceinfo_;
}

void ProtoIMBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMBaseInfo& ProtoIMBaseInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMBaseInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMBaseInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdkversion_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && deviceinfo_ != nullptr) {
    delete deviceinfo_;
  }
  deviceinfo_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ProtoIMBaseInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string platform = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_platform();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMBaseInfo.platform"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sdkVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sdkversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMBaseInfo.sdkVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMDeviceInfo deviceInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deviceinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMBaseInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMBaseInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1;
  if (this->platform().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMBaseInfo.platform");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_platform(), target);
  }

  // string sdkVersion = 2;
  if (this->sdkversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sdkversion().data(), static_cast<int>(this->_internal_sdkversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMBaseInfo.sdkVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sdkversion(), target);
  }

  // .im.citylife.proto.ProtoIMDeviceInfo deviceInfo = 3;
  if (this->has_deviceinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::deviceinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMBaseInfo)
  return target;
}

size_t ProtoIMBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMBaseInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform = 1;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // string sdkVersion = 2;
  if (this->sdkversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sdkversion());
  }

  // .im.citylife.proto.ProtoIMDeviceInfo deviceInfo = 3;
  if (this->has_deviceinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deviceinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMBaseInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMBaseInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMBaseInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMBaseInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMBaseInfo)
    MergeFrom(*source);
  }
}

void ProtoIMBaseInfo::MergeFrom(const ProtoIMBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.sdkversion().size() > 0) {

    sdkversion_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sdkversion_);
  }
  if (from.has_deviceinfo()) {
    _internal_mutable_deviceinfo()->::im::citylife::proto::ProtoIMDeviceInfo::MergeFrom(from._internal_deviceinfo());
  }
}

void ProtoIMBaseInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMBaseInfo::CopyFrom(const ProtoIMBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMBaseInfo::IsInitialized() const {
  return true;
}

void ProtoIMBaseInfo::InternalSwap(ProtoIMBaseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  platform_.Swap(&other->platform_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdkversion_.Swap(&other->sdkversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deviceinfo_, other->deviceinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMBaseInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMDeviceInfo::InitAsDefaultInstance() {
}
class ProtoIMDeviceInfo::_Internal {
 public:
};

ProtoIMDeviceInfo::ProtoIMDeviceInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMDeviceInfo)
}
ProtoIMDeviceInfo::ProtoIMDeviceInfo(const ProtoIMDeviceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  osnameversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_osnameversion().empty()) {
    osnameversion_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.osnameversion_);
  }
  network_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_network().empty()) {
    network_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  networksp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_networksp().empty()) {
    networksp_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.networksp_);
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMDeviceInfo)
}

void ProtoIMDeviceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMDeviceInfo_IM_2eproto.base);
  osnameversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  networksp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtoIMDeviceInfo::~ProtoIMDeviceInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMDeviceInfo)
  SharedDtor();
}

void ProtoIMDeviceInfo::SharedDtor() {
  osnameversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  networksp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMDeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMDeviceInfo& ProtoIMDeviceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMDeviceInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMDeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  osnameversion_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  networksp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ProtoIMDeviceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string osNameVersion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_osnameversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMDeviceInfo.osNameVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string network = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_network();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMDeviceInfo.network"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string networkSp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_networksp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMDeviceInfo.networkSp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMDeviceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMDeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string osNameVersion = 1;
  if (this->osnameversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_osnameversion().data(), static_cast<int>(this->_internal_osnameversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMDeviceInfo.osNameVersion");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_osnameversion(), target);
  }

  // string network = 2;
  if (this->network().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_network().data(), static_cast<int>(this->_internal_network().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMDeviceInfo.network");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_network(), target);
  }

  // string networkSp = 3;
  if (this->networksp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_networksp().data(), static_cast<int>(this->_internal_networksp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMDeviceInfo.networkSp");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_networksp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMDeviceInfo)
  return target;
}

size_t ProtoIMDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMDeviceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string osNameVersion = 1;
  if (this->osnameversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_osnameversion());
  }

  // string network = 2;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_network());
  }

  // string networkSp = 3;
  if (this->networksp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_networksp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMDeviceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMDeviceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMDeviceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMDeviceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMDeviceInfo)
    MergeFrom(*source);
  }
}

void ProtoIMDeviceInfo::MergeFrom(const ProtoIMDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.osnameversion().size() > 0) {

    osnameversion_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.osnameversion_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.networksp().size() > 0) {

    networksp_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.networksp_);
  }
}

void ProtoIMDeviceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMDeviceInfo::CopyFrom(const ProtoIMDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMDeviceInfo::IsInitialized() const {
  return true;
}

void ProtoIMDeviceInfo::InternalSwap(ProtoIMDeviceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  osnameversion_.Swap(&other->osnameversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  network_.Swap(&other->network_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  networksp_.Swap(&other->networksp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMDeviceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMConfigInfo::InitAsDefaultInstance() {
}
class ProtoIMConfigInfo::_Internal {
 public:
};

ProtoIMConfigInfo::ProtoIMConfigInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMConfigInfo)
}
ProtoIMConfigInfo::ProtoIMConfigInfo(const ProtoIMConfigInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rootdir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rootdir().empty()) {
    rootdir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rootdir_);
  }
  databasedir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_databasedir().empty()) {
    databasedir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.databasedir_);
  }
  logdir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logdir().empty()) {
    logdir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.logdir_);
  }
  navidomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_navidomain().empty()) {
    navidomain_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.navidomain_);
  }
  ::memcpy(&backgroundmode_, &from.backgroundmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&loglevel_) -
    reinterpret_cast<char*>(&backgroundmode_)) + sizeof(loglevel_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMConfigInfo)
}

void ProtoIMConfigInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMConfigInfo_IM_2eproto.base);
  rootdir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasedir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logdir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  navidomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&backgroundmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loglevel_) -
      reinterpret_cast<char*>(&backgroundmode_)) + sizeof(loglevel_));
}

ProtoIMConfigInfo::~ProtoIMConfigInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMConfigInfo)
  SharedDtor();
}

void ProtoIMConfigInfo::SharedDtor() {
  rootdir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasedir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logdir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  navidomain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMConfigInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMConfigInfo& ProtoIMConfigInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMConfigInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMConfigInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMConfigInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rootdir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasedir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logdir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  navidomain_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&backgroundmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loglevel_) -
      reinterpret_cast<char*>(&backgroundmode_)) + sizeof(loglevel_));
  _internal_metadata_.Clear();
}

const char* ProtoIMConfigInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rootDir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_rootdir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConfigInfo.rootDir"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string databaseDir = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_databasedir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConfigInfo.databaseDir"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string logDir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_logdir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConfigInfo.logDir"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 backgroundMode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          backgroundmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string naviDomain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_navidomain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConfigInfo.naviDomain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool enableHttp2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          enablehttp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 logLevel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          loglevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMConfigInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMConfigInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rootDir = 1;
  if (this->rootdir().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rootdir().data(), static_cast<int>(this->_internal_rootdir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConfigInfo.rootDir");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rootdir(), target);
  }

  // string databaseDir = 2;
  if (this->databasedir().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_databasedir().data(), static_cast<int>(this->_internal_databasedir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConfigInfo.databaseDir");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_databasedir(), target);
  }

  // string logDir = 3;
  if (this->logdir().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logdir().data(), static_cast<int>(this->_internal_logdir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConfigInfo.logDir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_logdir(), target);
  }

  // int32 backgroundMode = 4;
  if (this->backgroundmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_backgroundmode(), target);
  }

  // string naviDomain = 5;
  if (this->navidomain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_navidomain().data(), static_cast<int>(this->_internal_navidomain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConfigInfo.naviDomain");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_navidomain(), target);
  }

  // bool enableHttp2 = 6;
  if (this->enablehttp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_enablehttp2(), target);
  }

  // int32 logLevel = 7;
  if (this->loglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_loglevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMConfigInfo)
  return target;
}

size_t ProtoIMConfigInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMConfigInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rootDir = 1;
  if (this->rootdir().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rootdir());
  }

  // string databaseDir = 2;
  if (this->databasedir().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_databasedir());
  }

  // string logDir = 3;
  if (this->logdir().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logdir());
  }

  // string naviDomain = 5;
  if (this->navidomain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_navidomain());
  }

  // int32 backgroundMode = 4;
  if (this->backgroundmode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_backgroundmode());
  }

  // bool enableHttp2 = 6;
  if (this->enablehttp2() != 0) {
    total_size += 1 + 1;
  }

  // int32 logLevel = 7;
  if (this->loglevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_loglevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMConfigInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMConfigInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMConfigInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMConfigInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMConfigInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMConfigInfo)
    MergeFrom(*source);
  }
}

void ProtoIMConfigInfo::MergeFrom(const ProtoIMConfigInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMConfigInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rootdir().size() > 0) {

    rootdir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rootdir_);
  }
  if (from.databasedir().size() > 0) {

    databasedir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.databasedir_);
  }
  if (from.logdir().size() > 0) {

    logdir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.logdir_);
  }
  if (from.navidomain().size() > 0) {

    navidomain_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.navidomain_);
  }
  if (from.backgroundmode() != 0) {
    _internal_set_backgroundmode(from._internal_backgroundmode());
  }
  if (from.enablehttp2() != 0) {
    _internal_set_enablehttp2(from._internal_enablehttp2());
  }
  if (from.loglevel() != 0) {
    _internal_set_loglevel(from._internal_loglevel());
  }
}

void ProtoIMConfigInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMConfigInfo::CopyFrom(const ProtoIMConfigInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMConfigInfo::IsInitialized() const {
  return true;
}

void ProtoIMConfigInfo::InternalSwap(ProtoIMConfigInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rootdir_.Swap(&other->rootdir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  databasedir_.Swap(&other->databasedir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logdir_.Swap(&other->logdir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  navidomain_.Swap(&other->navidomain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(backgroundmode_, other->backgroundmode_);
  swap(enablehttp2_, other->enablehttp2_);
  swap(loglevel_, other->loglevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMConfigInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppRecvMessage::InitAsDefaultInstance() {
}
class ProtoIMAppRecvMessage::_Internal {
 public:
};

ProtoIMAppRecvMessage::ProtoIMAppRecvMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppRecvMessage)
}
ProtoIMAppRecvMessage::ProtoIMAppRecvMessage(const ProtoIMAppRecvMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msgtype().empty()) {
    msgtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgtype_);
  }
  fromid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fromid().empty()) {
    fromid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromid_);
  }
  convid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_convid().empty()) {
    convid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.convid_);
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  msgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msgid().empty()) {
    msgid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&convtype_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(convtype_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppRecvMessage)
}

void ProtoIMAppRecvMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppRecvMessage_IM_2eproto.base);
  msgtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  convid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&convtype_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(convtype_));
}

ProtoIMAppRecvMessage::~ProtoIMAppRecvMessage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppRecvMessage)
  SharedDtor();
}

void ProtoIMAppRecvMessage::SharedDtor() {
  msgtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  convid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMAppRecvMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppRecvMessage& ProtoIMAppRecvMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppRecvMessage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppRecvMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppRecvMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  convid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&convtype_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(convtype_));
  _internal_metadata_.Clear();
}

const char* ProtoIMAppRecvMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 convType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          convtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msgType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msgtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppRecvMessage.msgType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fromId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_fromid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppRecvMessage.fromId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string convId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_convid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppRecvMessage.convId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppRecvMessage.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msgId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_msgid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppRecvMessage.msgId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppRecvMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppRecvMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 convType = 1;
  if (this->convtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_convtype(), target);
  }

  // string msgType = 2;
  if (this->msgtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msgtype().data(), static_cast<int>(this->_internal_msgtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppRecvMessage.msgType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msgtype(), target);
  }

  // string fromId = 3;
  if (this->fromid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fromid().data(), static_cast<int>(this->_internal_fromid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppRecvMessage.fromId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_fromid(), target);
  }

  // string convId = 4;
  if (this->convid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_convid().data(), static_cast<int>(this->_internal_convid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppRecvMessage.convId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_convid(), target);
  }

  // string content = 5;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppRecvMessage.content");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_content(), target);
  }

  // string msgId = 6;
  if (this->msgid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msgid().data(), static_cast<int>(this->_internal_msgid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppRecvMessage.msgId");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_msgid(), target);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppRecvMessage)
  return target;
}

size_t ProtoIMAppRecvMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppRecvMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msgType = 2;
  if (this->msgtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msgtype());
  }

  // string fromId = 3;
  if (this->fromid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fromid());
  }

  // string convId = 4;
  if (this->convid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_convid());
  }

  // string content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string msgId = 6;
  if (this->msgid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msgid());
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // int32 convType = 1;
  if (this->convtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_convtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppRecvMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppRecvMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppRecvMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppRecvMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppRecvMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppRecvMessage)
    MergeFrom(*source);
  }
}

void ProtoIMAppRecvMessage::MergeFrom(const ProtoIMAppRecvMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppRecvMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgtype().size() > 0) {

    msgtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgtype_);
  }
  if (from.fromid().size() > 0) {

    fromid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromid_);
  }
  if (from.convid().size() > 0) {

    convid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.convid_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.msgid().size() > 0) {

    msgid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.convtype() != 0) {
    _internal_set_convtype(from._internal_convtype());
  }
}

void ProtoIMAppRecvMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppRecvMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppRecvMessage::CopyFrom(const ProtoIMAppRecvMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppRecvMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppRecvMessage::IsInitialized() const {
  return true;
}

void ProtoIMAppRecvMessage::InternalSwap(ProtoIMAppRecvMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msgtype_.Swap(&other->msgtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fromid_.Swap(&other->fromid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  convid_.Swap(&other->convid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgid_.Swap(&other->msgid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(convtype_, other->convtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppRecvMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppRecvMessages::InitAsDefaultInstance() {
}
class ProtoIMAppRecvMessages::_Internal {
 public:
};

ProtoIMAppRecvMessages::ProtoIMAppRecvMessages()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppRecvMessages)
}
ProtoIMAppRecvMessages::ProtoIMAppRecvMessages(const ProtoIMAppRecvMessages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      msgs_(from.msgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppRecvMessages)
}

void ProtoIMAppRecvMessages::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppRecvMessages_IM_2eproto.base);
}

ProtoIMAppRecvMessages::~ProtoIMAppRecvMessages() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppRecvMessages)
  SharedDtor();
}

void ProtoIMAppRecvMessages::SharedDtor() {
}

void ProtoIMAppRecvMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppRecvMessages& ProtoIMAppRecvMessages::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppRecvMessages_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppRecvMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppRecvMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgs_.Clear();
  _internal_metadata_.Clear();
}

const char* ProtoIMAppRecvMessages::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .im.citylife.proto.ProtoIMAppRecvMessage msgs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_msgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppRecvMessages::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppRecvMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im.citylife.proto.ProtoIMAppRecvMessage msgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_msgs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_msgs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppRecvMessages)
  return target;
}

size_t ProtoIMAppRecvMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppRecvMessages)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .im.citylife.proto.ProtoIMAppRecvMessage msgs = 1;
  total_size += 1UL * this->_internal_msgs_size();
  for (const auto& msg : this->msgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppRecvMessages::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppRecvMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppRecvMessages* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppRecvMessages>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppRecvMessages)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppRecvMessages)
    MergeFrom(*source);
  }
}

void ProtoIMAppRecvMessages::MergeFrom(const ProtoIMAppRecvMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppRecvMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
}

void ProtoIMAppRecvMessages::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppRecvMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppRecvMessages::CopyFrom(const ProtoIMAppRecvMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppRecvMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppRecvMessages::IsInitialized() const {
  return true;
}

void ProtoIMAppRecvMessages::InternalSwap(ProtoIMAppRecvMessages* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msgs_.InternalSwap(&other->msgs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppRecvMessages::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppSendMessage::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMAppSendMessage_default_instance_._instance.get_mutable()->pushinfo_ = const_cast< ::im::citylife::proto::ProtoIMAppPushInfo*>(
      ::im::citylife::proto::ProtoIMAppPushInfo::internal_default_instance());
  ::im::citylife::proto::_ProtoIMAppSendMessage_default_instance_._instance.get_mutable()->asyncinfo_ = const_cast< ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo*>(
      ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo::internal_default_instance());
}
class ProtoIMAppSendMessage::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMAppPushInfo& pushinfo(const ProtoIMAppSendMessage* msg);
  static const ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo& asyncinfo(const ProtoIMAppSendMessage* msg);
};

const ::im::citylife::proto::ProtoIMAppPushInfo&
ProtoIMAppSendMessage::_Internal::pushinfo(const ProtoIMAppSendMessage* msg) {
  return *msg->pushinfo_;
}
const ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo&
ProtoIMAppSendMessage::_Internal::asyncinfo(const ProtoIMAppSendMessage* msg) {
  return *msg->asyncinfo_;
}
ProtoIMAppSendMessage::ProtoIMAppSendMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppSendMessage)
}
ProtoIMAppSendMessage::ProtoIMAppSendMessage(const ProtoIMAppSendMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from._internal_has_pushinfo()) {
    pushinfo_ = new ::im::citylife::proto::ProtoIMAppPushInfo(*from.pushinfo_);
  } else {
    pushinfo_ = nullptr;
  }
  if (from._internal_has_asyncinfo()) {
    asyncinfo_ = new ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo(*from.asyncinfo_);
  } else {
    asyncinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppSendMessage)
}

void ProtoIMAppSendMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppSendMessage_IM_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&pushinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&asyncinfo_) -
      reinterpret_cast<char*>(&pushinfo_)) + sizeof(asyncinfo_));
}

ProtoIMAppSendMessage::~ProtoIMAppSendMessage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppSendMessage)
  SharedDtor();
}

void ProtoIMAppSendMessage::SharedDtor() {
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pushinfo_;
  if (this != internal_default_instance()) delete asyncinfo_;
}

void ProtoIMAppSendMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppSendMessage& ProtoIMAppSendMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppSendMessage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppSendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppSendMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && pushinfo_ != nullptr) {
    delete pushinfo_;
  }
  pushinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && asyncinfo_ != nullptr) {
    delete asyncinfo_;
  }
  asyncinfo_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ProtoIMAppSendMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessage.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessage.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessage.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMAppPushInfo pushInfo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pushinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo asyncInfo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_asyncinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppSendMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppSendMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessage.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessage.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessage.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // .im.citylife.proto.ProtoIMAppPushInfo pushInfo = 4;
  if (this->has_pushinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::pushinfo(this), target, stream);
  }

  // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo asyncInfo = 5;
  if (this->has_asyncinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::asyncinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppSendMessage)
  return target;
}

size_t ProtoIMAppSendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppSendMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // .im.citylife.proto.ProtoIMAppPushInfo pushInfo = 4;
  if (this->has_pushinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pushinfo_);
  }

  // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo asyncInfo = 5;
  if (this->has_asyncinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *asyncinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppSendMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppSendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppSendMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppSendMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppSendMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppSendMessage)
    MergeFrom(*source);
  }
}

void ProtoIMAppSendMessage::MergeFrom(const ProtoIMAppSendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppSendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_pushinfo()) {
    _internal_mutable_pushinfo()->::im::citylife::proto::ProtoIMAppPushInfo::MergeFrom(from._internal_pushinfo());
  }
  if (from.has_asyncinfo()) {
    _internal_mutable_asyncinfo()->::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo::MergeFrom(from._internal_asyncinfo());
  }
}

void ProtoIMAppSendMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppSendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppSendMessage::CopyFrom(const ProtoIMAppSendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppSendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppSendMessage::IsInitialized() const {
  return true;
}

void ProtoIMAppSendMessage::InternalSwap(ProtoIMAppSendMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pushinfo_, other->pushinfo_);
  swap(asyncinfo_, other->asyncinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppSendMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppPushInfo::InitAsDefaultInstance() {
}
class ProtoIMAppPushInfo::_Internal {
 public:
};

ProtoIMAppPushInfo::ProtoIMAppPushInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppPushInfo)
}
ProtoIMAppPushInfo::ProtoIMAppPushInfo(const ProtoIMAppPushInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pushcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushcontent().empty()) {
    pushcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushcontent_);
  }
  pushdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushdata().empty()) {
    pushdata_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushdata_);
  }
  pushtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushtitle().empty()) {
    pushtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushtitle_);
  }
  pushsubtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushsubtitle().empty()) {
    pushsubtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsubtitle_);
  }
  pushsound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushsound().empty()) {
    pushsound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsound_);
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppPushInfo)
}

void ProtoIMAppPushInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppPushInfo_IM_2eproto.base);
  pushcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtoIMAppPushInfo::~ProtoIMAppPushInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppPushInfo)
  SharedDtor();
}

void ProtoIMAppPushInfo::SharedDtor() {
  pushcontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMAppPushInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppPushInfo& ProtoIMAppPushInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppPushInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppPushInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppPushInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushcontent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ProtoIMAppPushInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pushContent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pushcontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppPushInfo.pushContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pushdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppPushInfo.pushData"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushTitle = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pushtitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppPushInfo.pushTitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushSubtitle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_pushsubtitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppPushInfo.pushSubtitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushSound = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pushsound();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppPushInfo.pushSound"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppPushInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppPushInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pushContent = 1;
  if (this->pushcontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushcontent().data(), static_cast<int>(this->_internal_pushcontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppPushInfo.pushContent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pushcontent(), target);
  }

  // string pushData = 2;
  if (this->pushdata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushdata().data(), static_cast<int>(this->_internal_pushdata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppPushInfo.pushData");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pushdata(), target);
  }

  // string pushTitle = 3;
  if (this->pushtitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushtitle().data(), static_cast<int>(this->_internal_pushtitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppPushInfo.pushTitle");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pushtitle(), target);
  }

  // string pushSubtitle = 4;
  if (this->pushsubtitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushsubtitle().data(), static_cast<int>(this->_internal_pushsubtitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppPushInfo.pushSubtitle");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_pushsubtitle(), target);
  }

  // string pushSound = 5;
  if (this->pushsound().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushsound().data(), static_cast<int>(this->_internal_pushsound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppPushInfo.pushSound");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_pushsound(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppPushInfo)
  return target;
}

size_t ProtoIMAppPushInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppPushInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pushContent = 1;
  if (this->pushcontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushcontent());
  }

  // string pushData = 2;
  if (this->pushdata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushdata());
  }

  // string pushTitle = 3;
  if (this->pushtitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushtitle());
  }

  // string pushSubtitle = 4;
  if (this->pushsubtitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushsubtitle());
  }

  // string pushSound = 5;
  if (this->pushsound().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushsound());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppPushInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppPushInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppPushInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppPushInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppPushInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppPushInfo)
    MergeFrom(*source);
  }
}

void ProtoIMAppPushInfo::MergeFrom(const ProtoIMAppPushInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppPushInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pushcontent().size() > 0) {

    pushcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushcontent_);
  }
  if (from.pushdata().size() > 0) {

    pushdata_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushdata_);
  }
  if (from.pushtitle().size() > 0) {

    pushtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushtitle_);
  }
  if (from.pushsubtitle().size() > 0) {

    pushsubtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsubtitle_);
  }
  if (from.pushsound().size() > 0) {

    pushsound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsound_);
  }
}

void ProtoIMAppPushInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppPushInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppPushInfo::CopyFrom(const ProtoIMAppPushInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppPushInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppPushInfo::IsInitialized() const {
  return true;
}

void ProtoIMAppPushInfo::InternalSwap(ProtoIMAppPushInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pushcontent_.Swap(&other->pushcontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushdata_.Swap(&other->pushdata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushtitle_.Swap(&other->pushtitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushsubtitle_.Swap(&other->pushsubtitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushsound_.Swap(&other->pushsound_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppPushInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppSendMessageAsyncInfo::InitAsDefaultInstance() {
}
class ProtoIMAppSendMessageAsyncInfo::_Internal {
 public:
};

ProtoIMAppSendMessageAsyncInfo::ProtoIMAppSendMessageAsyncInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
}
ProtoIMAppSendMessageAsyncInfo::ProtoIMAppSendMessageAsyncInfo(const ProtoIMAppSendMessageAsyncInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localpath().empty()) {
    localpath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localpath_);
  }
  serverurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serverurl().empty()) {
    serverurl_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.serverurl_);
  }
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filetype().empty()) {
    filetype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
}

void ProtoIMAppSendMessageAsyncInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serverurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
}

ProtoIMAppSendMessageAsyncInfo::~ProtoIMAppSendMessageAsyncInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  SharedDtor();
}

void ProtoIMAppSendMessageAsyncInfo::SharedDtor() {
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serverurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMAppSendMessageAsyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppSendMessageAsyncInfo& ProtoIMAppSendMessageAsyncInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppSendMessageAsyncInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppSendMessageAsyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serverurl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ProtoIMAppSendMessageAsyncInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string localPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_localpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.localPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string serverUrl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_serverurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.serverUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fileType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_filetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.fileType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppSendMessageAsyncInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string localPath = 2;
  if (this->localpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_localpath().data(), static_cast<int>(this->_internal_localpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.localPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_localpath(), target);
  }

  // string serverUrl = 3;
  if (this->serverurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serverurl().data(), static_cast<int>(this->_internal_serverurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.serverUrl");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serverurl(), target);
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filetype().data(), static_cast<int>(this->_internal_filetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppSendMessageAsyncInfo.fileType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filetype(), target);
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  return target;
}

size_t ProtoIMAppSendMessageAsyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string localPath = 2;
  if (this->localpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_localpath());
  }

  // string serverUrl = 3;
  if (this->serverurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serverurl());
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filetype());
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppSendMessageAsyncInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppSendMessageAsyncInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppSendMessageAsyncInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
    MergeFrom(*source);
  }
}

void ProtoIMAppSendMessageAsyncInfo::MergeFrom(const ProtoIMAppSendMessageAsyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.localpath().size() > 0) {

    localpath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localpath_);
  }
  if (from.serverurl().size() > 0) {

    serverurl_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.serverurl_);
  }
  if (from.filetype().size() > 0) {

    filetype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ProtoIMAppSendMessageAsyncInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppSendMessageAsyncInfo::CopyFrom(const ProtoIMAppSendMessageAsyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppSendMessageAsyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppSendMessageAsyncInfo::IsInitialized() const {
  return true;
}

void ProtoIMAppSendMessageAsyncInfo::InternalSwap(ProtoIMAppSendMessageAsyncInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localpath_.Swap(&other->localpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverurl_.Swap(&other->serverurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filetype_.Swap(&other->filetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppSendMessageAsyncInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMAppDownloadFileInfo::InitAsDefaultInstance() {
}
class ProtoIMAppDownloadFileInfo::_Internal {
 public:
};

ProtoIMAppDownloadFileInfo::ProtoIMAppDownloadFileInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMAppDownloadFileInfo)
}
ProtoIMAppDownloadFileInfo::ProtoIMAppDownloadFileInfo(const ProtoIMAppDownloadFileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msgid().empty()) {
    msgid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
  senderid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_senderid().empty()) {
    senderid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  fileid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fileid().empty()) {
    fileid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fileid_);
  }
  localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localpath().empty()) {
    localpath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localpath_);
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filetype().empty()) {
    filetype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMAppDownloadFileInfo)
}

void ProtoIMAppDownloadFileInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMAppDownloadFileInfo_IM_2eproto.base);
  msgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  senderid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fileid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
}

ProtoIMAppDownloadFileInfo::~ProtoIMAppDownloadFileInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  SharedDtor();
}

void ProtoIMAppDownloadFileInfo::SharedDtor() {
  msgid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  senderid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fileid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMAppDownloadFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMAppDownloadFileInfo& ProtoIMAppDownloadFileInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMAppDownloadFileInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMAppDownloadFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  senderid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fileid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ProtoIMAppDownloadFileInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msgId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msgid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.msgId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string senderId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_senderid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.senderId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fileId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_fileid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.fileId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string localPath = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_localpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.localPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fileType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_filetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMAppDownloadFileInfo.fileType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMAppDownloadFileInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msgId = 1;
  if (this->msgid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msgid().data(), static_cast<int>(this->_internal_msgid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.msgId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msgid(), target);
  }

  // string senderId = 2;
  if (this->senderid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_senderid().data(), static_cast<int>(this->_internal_senderid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.senderId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_senderid(), target);
  }

  // string fileId = 3;
  if (this->fileid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fileid().data(), static_cast<int>(this->_internal_fileid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.fileId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_fileid(), target);
  }

  // string localPath = 4;
  if (this->localpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_localpath().data(), static_cast<int>(this->_internal_localpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.localPath");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_localpath(), target);
  }

  // string url = 5;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_url(), target);
  }

  // string fileType = 6;
  if (this->filetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filetype().data(), static_cast<int>(this->_internal_filetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMAppDownloadFileInfo.fileType");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_filetype(), target);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  return target;
}

size_t ProtoIMAppDownloadFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msgId = 1;
  if (this->msgid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msgid());
  }

  // string senderId = 2;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_senderid());
  }

  // string fileId = 3;
  if (this->fileid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fileid());
  }

  // string localPath = 4;
  if (this->localpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_localpath());
  }

  // string url = 5;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string fileType = 6;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filetype());
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMAppDownloadFileInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMAppDownloadFileInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMAppDownloadFileInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMAppDownloadFileInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMAppDownloadFileInfo)
    MergeFrom(*source);
  }
}

void ProtoIMAppDownloadFileInfo::MergeFrom(const ProtoIMAppDownloadFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgid().size() > 0) {

    msgid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.fileid().size() > 0) {

    fileid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fileid_);
  }
  if (from.localpath().size() > 0) {

    localpath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localpath_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.filetype().size() > 0) {

    filetype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ProtoIMAppDownloadFileInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMAppDownloadFileInfo::CopyFrom(const ProtoIMAppDownloadFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMAppDownloadFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMAppDownloadFileInfo::IsInitialized() const {
  return true;
}

void ProtoIMAppDownloadFileInfo::InternalSwap(ProtoIMAppDownloadFileInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msgid_.Swap(&other->msgid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senderid_.Swap(&other->senderid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fileid_.Swap(&other->fileid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localpath_.Swap(&other->localpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filetype_.Swap(&other->filetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMAppDownloadFileInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMOfflinePushInfo::InitAsDefaultInstance() {
}
class ProtoIMOfflinePushInfo::_Internal {
 public:
};

ProtoIMOfflinePushInfo::ProtoIMOfflinePushInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMOfflinePushInfo)
}
ProtoIMOfflinePushInfo::ProtoIMOfflinePushInfo(const ProtoIMOfflinePushInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pushcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushcontent().empty()) {
    pushcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushcontent_);
  }
  pushdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushdata().empty()) {
    pushdata_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushdata_);
  }
  pushtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushtitle().empty()) {
    pushtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushtitle_);
  }
  pushsubtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushsubtitle().empty()) {
    pushsubtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsubtitle_);
  }
  pushsound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pushsound().empty()) {
    pushsound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsound_);
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMOfflinePushInfo)
}

void ProtoIMOfflinePushInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMOfflinePushInfo_IM_2eproto.base);
  pushcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtoIMOfflinePushInfo::~ProtoIMOfflinePushInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMOfflinePushInfo)
  SharedDtor();
}

void ProtoIMOfflinePushInfo::SharedDtor() {
  pushcontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMOfflinePushInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMOfflinePushInfo& ProtoIMOfflinePushInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMOfflinePushInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMOfflinePushInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushcontent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushdata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushtitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsubtitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pushsound_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ProtoIMOfflinePushInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pushcontent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pushcontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMOfflinePushInfo.pushcontent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushdata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pushdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMOfflinePushInfo.pushdata"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushtitle = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pushtitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMOfflinePushInfo.pushtitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushsubtitle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_pushsubtitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMOfflinePushInfo.pushsubtitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pushsound = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pushsound();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMOfflinePushInfo.pushsound"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMOfflinePushInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pushcontent = 1;
  if (this->pushcontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushcontent().data(), static_cast<int>(this->_internal_pushcontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMOfflinePushInfo.pushcontent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pushcontent(), target);
  }

  // string pushdata = 2;
  if (this->pushdata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushdata().data(), static_cast<int>(this->_internal_pushdata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMOfflinePushInfo.pushdata");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pushdata(), target);
  }

  // string pushtitle = 3;
  if (this->pushtitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushtitle().data(), static_cast<int>(this->_internal_pushtitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMOfflinePushInfo.pushtitle");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pushtitle(), target);
  }

  // string pushsubtitle = 4;
  if (this->pushsubtitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushsubtitle().data(), static_cast<int>(this->_internal_pushsubtitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMOfflinePushInfo.pushsubtitle");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_pushsubtitle(), target);
  }

  // string pushsound = 5;
  if (this->pushsound().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pushsound().data(), static_cast<int>(this->_internal_pushsound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMOfflinePushInfo.pushsound");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_pushsound(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMOfflinePushInfo)
  return target;
}

size_t ProtoIMOfflinePushInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pushcontent = 1;
  if (this->pushcontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushcontent());
  }

  // string pushdata = 2;
  if (this->pushdata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushdata());
  }

  // string pushtitle = 3;
  if (this->pushtitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushtitle());
  }

  // string pushsubtitle = 4;
  if (this->pushsubtitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushsubtitle());
  }

  // string pushsound = 5;
  if (this->pushsound().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pushsound());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMOfflinePushInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMOfflinePushInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMOfflinePushInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMOfflinePushInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMOfflinePushInfo)
    MergeFrom(*source);
  }
}

void ProtoIMOfflinePushInfo::MergeFrom(const ProtoIMOfflinePushInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pushcontent().size() > 0) {

    pushcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushcontent_);
  }
  if (from.pushdata().size() > 0) {

    pushdata_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushdata_);
  }
  if (from.pushtitle().size() > 0) {

    pushtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushtitle_);
  }
  if (from.pushsubtitle().size() > 0) {

    pushsubtitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsubtitle_);
  }
  if (from.pushsound().size() > 0) {

    pushsound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pushsound_);
  }
}

void ProtoIMOfflinePushInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMOfflinePushInfo::CopyFrom(const ProtoIMOfflinePushInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMOfflinePushInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMOfflinePushInfo::IsInitialized() const {
  return true;
}

void ProtoIMOfflinePushInfo::InternalSwap(ProtoIMOfflinePushInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pushcontent_.Swap(&other->pushcontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushdata_.Swap(&other->pushdata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushtitle_.Swap(&other->pushtitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushsubtitle_.Swap(&other->pushsubtitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pushsound_.Swap(&other->pushsound_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMOfflinePushInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMSendMessageAsyncInfo::InitAsDefaultInstance() {
}
class ProtoIMSendMessageAsyncInfo::_Internal {
 public:
};

ProtoIMSendMessageAsyncInfo::ProtoIMSendMessageAsyncInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
}
ProtoIMSendMessageAsyncInfo::ProtoIMSendMessageAsyncInfo(const ProtoIMSendMessageAsyncInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  local_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_path().empty()) {
    local_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_path_);
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  file_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_type().empty()) {
    file_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
}

void ProtoIMSendMessageAsyncInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
}

ProtoIMSendMessageAsyncInfo::~ProtoIMSendMessageAsyncInfo() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  SharedDtor();
}

void ProtoIMSendMessageAsyncInfo::SharedDtor() {
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMSendMessageAsyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMSendMessageAsyncInfo& ProtoIMSendMessageAsyncInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMSendMessageAsyncInfo_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMSendMessageAsyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ProtoIMSendMessageAsyncInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMSendMessageAsyncInfo.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string local_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_local_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMSendMessageAsyncInfo.local_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMSendMessageAsyncInfo.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_file_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMSendMessageAsyncInfo.file_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMSendMessageAsyncInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMSendMessageAsyncInfo.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string local_path = 2;
  if (this->local_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_path().data(), static_cast<int>(this->_internal_local_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMSendMessageAsyncInfo.local_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_local_path(), target);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMSendMessageAsyncInfo.url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_url(), target);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_type().data(), static_cast<int>(this->_internal_file_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMSendMessageAsyncInfo.file_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_file_type(), target);
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  return target;
}

size_t ProtoIMSendMessageAsyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string local_path = 2;
  if (this->local_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_path());
  }

  // string url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_type());
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMSendMessageAsyncInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMSendMessageAsyncInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMSendMessageAsyncInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
    MergeFrom(*source);
  }
}

void ProtoIMSendMessageAsyncInfo::MergeFrom(const ProtoIMSendMessageAsyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.local_path().size() > 0) {

    local_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_path_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.file_type().size() > 0) {

    file_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ProtoIMSendMessageAsyncInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMSendMessageAsyncInfo::CopyFrom(const ProtoIMSendMessageAsyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMSendMessageAsyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMSendMessageAsyncInfo::IsInitialized() const {
  return true;
}

void ProtoIMSendMessageAsyncInfo::InternalSwap(ProtoIMSendMessageAsyncInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_path_.Swap(&other->local_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_type_.Swap(&other->file_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMSendMessageAsyncInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMSendMessage::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMSendMessage_default_instance_._instance.get_mutable()->message_ = const_cast< ::im::citylife::proto::ProtoIMMessage*>(
      ::im::citylife::proto::ProtoIMMessage::internal_default_instance());
  ::im::citylife::proto::_ProtoIMSendMessage_default_instance_._instance.get_mutable()->async_info_ = const_cast< ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo*>(
      ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo::internal_default_instance());
  ::im::citylife::proto::_ProtoIMSendMessage_default_instance_._instance.get_mutable()->msg_push_info_ = const_cast< ::im::citylife::proto::ProtoIMOfflinePushInfo*>(
      ::im::citylife::proto::ProtoIMOfflinePushInfo::internal_default_instance());
}
class ProtoIMSendMessage::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMMessage& message(const ProtoIMSendMessage* msg);
  static const ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo& async_info(const ProtoIMSendMessage* msg);
  static const ::im::citylife::proto::ProtoIMOfflinePushInfo& msg_push_info(const ProtoIMSendMessage* msg);
};

const ::im::citylife::proto::ProtoIMMessage&
ProtoIMSendMessage::_Internal::message(const ProtoIMSendMessage* msg) {
  return *msg->message_;
}
const ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo&
ProtoIMSendMessage::_Internal::async_info(const ProtoIMSendMessage* msg) {
  return *msg->async_info_;
}
const ::im::citylife::proto::ProtoIMOfflinePushInfo&
ProtoIMSendMessage::_Internal::msg_push_info(const ProtoIMSendMessage* msg) {
  return *msg->msg_push_info_;
}
ProtoIMSendMessage::ProtoIMSendMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMSendMessage)
}
ProtoIMSendMessage::ProtoIMSendMessage(const ProtoIMSendMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_message()) {
    message_ = new ::im::citylife::proto::ProtoIMMessage(*from.message_);
  } else {
    message_ = nullptr;
  }
  if (from._internal_has_async_info()) {
    async_info_ = new ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo(*from.async_info_);
  } else {
    async_info_ = nullptr;
  }
  if (from._internal_has_msg_push_info()) {
    msg_push_info_ = new ::im::citylife::proto::ProtoIMOfflinePushInfo(*from.msg_push_info_);
  } else {
    msg_push_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMSendMessage)
}

void ProtoIMSendMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMSendMessage_IM_2eproto.base);
  ::memset(&message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_push_info_) -
      reinterpret_cast<char*>(&message_)) + sizeof(msg_push_info_));
}

ProtoIMSendMessage::~ProtoIMSendMessage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMSendMessage)
  SharedDtor();
}

void ProtoIMSendMessage::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
  if (this != internal_default_instance()) delete async_info_;
  if (this != internal_default_instance()) delete msg_push_info_;
}

void ProtoIMSendMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMSendMessage& ProtoIMSendMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMSendMessage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMSendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMSendMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && async_info_ != nullptr) {
    delete async_info_;
  }
  async_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && msg_push_info_ != nullptr) {
    delete msg_push_info_;
  }
  msg_push_info_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ProtoIMSendMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .im.citylife.proto.ProtoIMMessage message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo async_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_async_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMOfflinePushInfo msg_push_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_push_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMSendMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMSendMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .im.citylife.proto.ProtoIMMessage message = 1;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::message(this), target, stream);
  }

  // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo async_info = 2;
  if (this->has_async_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::async_info(this), target, stream);
  }

  // .im.citylife.proto.ProtoIMOfflinePushInfo msg_push_info = 3;
  if (this->has_msg_push_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::msg_push_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMSendMessage)
  return target;
}

size_t ProtoIMSendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMSendMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im.citylife.proto.ProtoIMMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // .im.citylife.proto.ProtoIMAppSendMessageAsyncInfo async_info = 2;
  if (this->has_async_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *async_info_);
  }

  // .im.citylife.proto.ProtoIMOfflinePushInfo msg_push_info = 3;
  if (this->has_msg_push_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_push_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMSendMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMSendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMSendMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMSendMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMSendMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMSendMessage)
    MergeFrom(*source);
  }
}

void ProtoIMSendMessage::MergeFrom(const ProtoIMSendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMSendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    _internal_mutable_message()->::im::citylife::proto::ProtoIMMessage::MergeFrom(from._internal_message());
  }
  if (from.has_async_info()) {
    _internal_mutable_async_info()->::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo::MergeFrom(from._internal_async_info());
  }
  if (from.has_msg_push_info()) {
    _internal_mutable_msg_push_info()->::im::citylife::proto::ProtoIMOfflinePushInfo::MergeFrom(from._internal_msg_push_info());
  }
}

void ProtoIMSendMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMSendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMSendMessage::CopyFrom(const ProtoIMSendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMSendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMSendMessage::IsInitialized() const {
  return true;
}

void ProtoIMSendMessage::InternalSwap(ProtoIMSendMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(async_info_, other->async_info_);
  swap(msg_push_info_, other->msg_push_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMSendMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMMessage::InitAsDefaultInstance() {
}
class ProtoIMMessage::_Internal {
 public:
};

ProtoIMMessage::ProtoIMMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMMessage)
}
ProtoIMMessage::ProtoIMMessage(const ProtoIMMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_uuid().empty()) {
    msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_uuid_);
  }
  msg_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_type().empty()) {
    msg_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_type_);
  }
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender().empty()) {
    sender_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  msg_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_content().empty()) {
    msg_content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_content_);
  }
  ::memcpy(&issend_, &from.issend_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&issend_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMMessage)
}

void ProtoIMMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMMessage_IM_2eproto.base);
  msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&issend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&issend_)) + sizeof(timestamp_));
}

ProtoIMMessage::~ProtoIMMessage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMMessage)
  SharedDtor();
}

void ProtoIMMessage::SharedDtor() {
  msg_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMMessage& ProtoIMMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMMessage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&issend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&issend_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

const char* ProtoIMMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msg_uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessage.msg_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessage.msg_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isSend = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          issend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sender = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessage.sender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessage.receiver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg_content = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_msg_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessage.msg_content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMMessageStatus msg_status = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_msg_status(static_cast<::im::citylife::proto::ProtoIMMessageStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_uuid = 1;
  if (this->msg_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_uuid().data(), static_cast<int>(this->_internal_msg_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessage.msg_uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg_uuid(), target);
  }

  // string msg_type = 2;
  if (this->msg_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_type().data(), static_cast<int>(this->_internal_msg_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessage.msg_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_type(), target);
  }

  // bool isSend = 3;
  if (this->issend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_issend(), target);
  }

  // string sender = 4;
  if (this->sender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessage.sender");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sender(), target);
  }

  // string receiver = 5;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessage.receiver");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receiver(), target);
  }

  // string msg_content = 6;
  if (this->msg_content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_content().data(), static_cast<int>(this->_internal_msg_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessage.msg_content");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_msg_content(), target);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_timestamp(), target);
  }

  // .im.citylife.proto.ProtoIMMessageStatus msg_status = 8;
  if (this->msg_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_msg_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMMessage)
  return target;
}

size_t ProtoIMMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_uuid = 1;
  if (this->msg_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_uuid());
  }

  // string msg_type = 2;
  if (this->msg_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_type());
  }

  // string sender = 4;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string receiver = 5;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  // string msg_content = 6;
  if (this->msg_content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_content());
  }

  // bool isSend = 3;
  if (this->issend() != 0) {
    total_size += 1 + 1;
  }

  // .im.citylife.proto.ProtoIMMessageStatus msg_status = 8;
  if (this->msg_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_msg_status());
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMMessage)
    MergeFrom(*source);
  }
}

void ProtoIMMessage::MergeFrom(const ProtoIMMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_uuid().size() > 0) {

    msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_uuid_);
  }
  if (from.msg_type().size() > 0) {

    msg_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_type_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.msg_content().size() > 0) {

    msg_content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_content_);
  }
  if (from.issend() != 0) {
    _internal_set_issend(from._internal_issend());
  }
  if (from.msg_status() != 0) {
    _internal_set_msg_status(from._internal_msg_status());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ProtoIMMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMMessage::CopyFrom(const ProtoIMMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMMessage::IsInitialized() const {
  return true;
}

void ProtoIMMessage::InternalSwap(ProtoIMMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_uuid_.Swap(&other->msg_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_type_.Swap(&other->msg_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_.Swap(&other->sender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_content_.Swap(&other->msg_content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(issend_, other->issend_);
  swap(msg_status_, other->msg_status_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMConversation::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMConversation_default_instance_._instance.get_mutable()->last_msg_ = const_cast< ::im::citylife::proto::ProtoIMSendMessage*>(
      ::im::citylife::proto::ProtoIMSendMessage::internal_default_instance());
}
class ProtoIMConversation::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMSendMessage& last_msg(const ProtoIMConversation* msg);
};

const ::im::citylife::proto::ProtoIMSendMessage&
ProtoIMConversation::_Internal::last_msg(const ProtoIMConversation* msg) {
  return *msg->last_msg_;
}
ProtoIMConversation::ProtoIMConversation()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMConversation)
}
ProtoIMConversation::ProtoIMConversation(const ProtoIMConversation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conv_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_conv_id().empty()) {
    conv_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conv_id_);
  }
  snapshot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_snapshot().empty()) {
    snapshot_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.snapshot_);
  }
  last_msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_msg_uuid().empty()) {
    last_msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_msg_uuid_);
  }
  last_readed_msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_readed_msg_uuid().empty()) {
    last_readed_msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_readed_msg_uuid_);
  }
  if (from._internal_has_last_msg()) {
    last_msg_ = new ::im::citylife::proto::ProtoIMSendMessage(*from.last_msg_);
  } else {
    last_msg_ = nullptr;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_readed_msg_timestamp_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(last_readed_msg_timestamp_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMConversation)
}

void ProtoIMConversation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMConversation_IM_2eproto.base);
  conv_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  snapshot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_readed_msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_readed_msg_timestamp_) -
      reinterpret_cast<char*>(&last_msg_)) + sizeof(last_readed_msg_timestamp_));
}

ProtoIMConversation::~ProtoIMConversation() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMConversation)
  SharedDtor();
}

void ProtoIMConversation::SharedDtor() {
  conv_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  snapshot_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_msg_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_readed_msg_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_msg_;
}

void ProtoIMConversation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMConversation& ProtoIMConversation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMConversation_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMConversation::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMConversation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conv_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  snapshot_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_msg_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_readed_msg_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && last_msg_ != nullptr) {
    delete last_msg_;
  }
  last_msg_ = nullptr;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_readed_msg_timestamp_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(last_readed_msg_timestamp_));
  _internal_metadata_.Clear();
}

const char* ProtoIMConversation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string conv_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_conv_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConversation.conv_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 conv_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          conv_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string snapshot = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_snapshot();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConversation.snapshot"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_msg_uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_last_msg_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConversation.last_msg_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_readed_msg_uuid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_last_readed_msg_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConversation.last_readed_msg_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_readed_msg_timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          last_readed_msg_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 unread_count = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          unread_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMSendMessage last_msg = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMConversation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMConversation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv_id = 1;
  if (this->conv_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_conv_id().data(), static_cast<int>(this->_internal_conv_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConversation.conv_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_conv_id(), target);
  }

  // int32 conv_type = 2;
  if (this->conv_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_conv_type(), target);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_timestamp(), target);
  }

  // string snapshot = 4;
  if (this->snapshot().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_snapshot().data(), static_cast<int>(this->_internal_snapshot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConversation.snapshot");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_snapshot(), target);
  }

  // string last_msg_uuid = 5;
  if (this->last_msg_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_msg_uuid().data(), static_cast<int>(this->_internal_last_msg_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConversation.last_msg_uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_last_msg_uuid(), target);
  }

  // string last_readed_msg_uuid = 6;
  if (this->last_readed_msg_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_readed_msg_uuid().data(), static_cast<int>(this->_internal_last_readed_msg_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConversation.last_readed_msg_uuid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_last_readed_msg_uuid(), target);
  }

  // int64 last_readed_msg_timestamp = 7;
  if (this->last_readed_msg_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_last_readed_msg_timestamp(), target);
  }

  // int32 unread_count = 8;
  if (this->unread_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_unread_count(), target);
  }

  // .im.citylife.proto.ProtoIMSendMessage last_msg = 9;
  if (this->has_last_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::last_msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMConversation)
  return target;
}

size_t ProtoIMConversation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMConversation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string conv_id = 1;
  if (this->conv_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_conv_id());
  }

  // string snapshot = 4;
  if (this->snapshot().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_snapshot());
  }

  // string last_msg_uuid = 5;
  if (this->last_msg_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_msg_uuid());
  }

  // string last_readed_msg_uuid = 6;
  if (this->last_readed_msg_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_readed_msg_uuid());
  }

  // .im.citylife.proto.ProtoIMSendMessage last_msg = 9;
  if (this->has_last_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_msg_);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // int32 conv_type = 2;
  if (this->conv_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_conv_type());
  }

  // int32 unread_count = 8;
  if (this->unread_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unread_count());
  }

  // int64 last_readed_msg_timestamp = 7;
  if (this->last_readed_msg_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_readed_msg_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMConversation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMConversation)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMConversation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMConversation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMConversation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMConversation)
    MergeFrom(*source);
  }
}

void ProtoIMConversation::MergeFrom(const ProtoIMConversation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMConversation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conv_id().size() > 0) {

    conv_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conv_id_);
  }
  if (from.snapshot().size() > 0) {

    snapshot_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.snapshot_);
  }
  if (from.last_msg_uuid().size() > 0) {

    last_msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_msg_uuid_);
  }
  if (from.last_readed_msg_uuid().size() > 0) {

    last_readed_msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_readed_msg_uuid_);
  }
  if (from.has_last_msg()) {
    _internal_mutable_last_msg()->::im::citylife::proto::ProtoIMSendMessage::MergeFrom(from._internal_last_msg());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.conv_type() != 0) {
    _internal_set_conv_type(from._internal_conv_type());
  }
  if (from.unread_count() != 0) {
    _internal_set_unread_count(from._internal_unread_count());
  }
  if (from.last_readed_msg_timestamp() != 0) {
    _internal_set_last_readed_msg_timestamp(from._internal_last_readed_msg_timestamp());
  }
}

void ProtoIMConversation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMConversation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMConversation::CopyFrom(const ProtoIMConversation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMConversation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMConversation::IsInitialized() const {
  return true;
}

void ProtoIMConversation::InternalSwap(ProtoIMConversation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  conv_id_.Swap(&other->conv_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  snapshot_.Swap(&other->snapshot_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_msg_uuid_.Swap(&other->last_msg_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_readed_msg_uuid_.Swap(&other->last_readed_msg_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_msg_, other->last_msg_);
  swap(timestamp_, other->timestamp_);
  swap(conv_type_, other->conv_type_);
  swap(unread_count_, other->unread_count_);
  swap(last_readed_msg_timestamp_, other->last_readed_msg_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMConversation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMConversations::InitAsDefaultInstance() {
}
class ProtoIMConversations::_Internal {
 public:
};

ProtoIMConversations::ProtoIMConversations()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMConversations)
}
ProtoIMConversations::ProtoIMConversations(const ProtoIMConversations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      convs_(from.convs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMConversations)
}

void ProtoIMConversations::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMConversations_IM_2eproto.base);
}

ProtoIMConversations::~ProtoIMConversations() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMConversations)
  SharedDtor();
}

void ProtoIMConversations::SharedDtor() {
}

void ProtoIMConversations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMConversations& ProtoIMConversations::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMConversations_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMConversations::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMConversations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  convs_.Clear();
  _internal_metadata_.Clear();
}

const char* ProtoIMConversations::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .im.citylife.proto.ProtoIMConversation convs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_convs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMConversations::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMConversations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im.citylife.proto.ProtoIMConversation convs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_convs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_convs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMConversations)
  return target;
}

size_t ProtoIMConversations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMConversations)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .im.citylife.proto.ProtoIMConversation convs = 1;
  total_size += 1UL * this->_internal_convs_size();
  for (const auto& msg : this->convs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMConversations::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMConversations)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMConversations* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMConversations>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMConversations)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMConversations)
    MergeFrom(*source);
  }
}

void ProtoIMConversations::MergeFrom(const ProtoIMConversations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMConversations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  convs_.MergeFrom(from.convs_);
}

void ProtoIMConversations::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMConversations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMConversations::CopyFrom(const ProtoIMConversations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMConversations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMConversations::IsInitialized() const {
  return true;
}

void ProtoIMConversations::InternalSwap(ProtoIMConversations* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  convs_.InternalSwap(&other->convs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMConversations::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMMessageEx::InitAsDefaultInstance() {
  ::im::citylife::proto::_ProtoIMMessageEx_default_instance_._instance.get_mutable()->conv_ = const_cast< ::im::citylife::proto::ProtoIMConversationBase*>(
      ::im::citylife::proto::ProtoIMConversationBase::internal_default_instance());
  ::im::citylife::proto::_ProtoIMMessageEx_default_instance_.text_ = const_cast< ::im::citylife::proto::ProtoIMMessageText*>(
      ::im::citylife::proto::ProtoIMMessageText::internal_default_instance());
  ::im::citylife::proto::_ProtoIMMessageEx_default_instance_.image_ = const_cast< ::im::citylife::proto::ProtoIMMessageImage*>(
      ::im::citylife::proto::ProtoIMMessageImage::internal_default_instance());
}
class ProtoIMMessageEx::_Internal {
 public:
  static const ::im::citylife::proto::ProtoIMConversationBase& conv(const ProtoIMMessageEx* msg);
  static const ::im::citylife::proto::ProtoIMMessageText& text(const ProtoIMMessageEx* msg);
  static const ::im::citylife::proto::ProtoIMMessageImage& image(const ProtoIMMessageEx* msg);
};

const ::im::citylife::proto::ProtoIMConversationBase&
ProtoIMMessageEx::_Internal::conv(const ProtoIMMessageEx* msg) {
  return *msg->conv_;
}
const ::im::citylife::proto::ProtoIMMessageText&
ProtoIMMessageEx::_Internal::text(const ProtoIMMessageEx* msg) {
  return *msg->test_oneof_.text_;
}
const ::im::citylife::proto::ProtoIMMessageImage&
ProtoIMMessageEx::_Internal::image(const ProtoIMMessageEx* msg) {
  return *msg->test_oneof_.image_;
}
void ProtoIMMessageEx::set_allocated_text(::im::citylife::proto::ProtoIMMessageText* text) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (text) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      text = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    test_oneof_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:im.citylife.proto.ProtoIMMessageEx.text)
}
void ProtoIMMessageEx::set_allocated_image(::im::citylife::proto::ProtoIMMessageImage* image) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (image) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      image = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    set_has_image();
    test_oneof_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:im.citylife.proto.ProtoIMMessageEx.image)
}
ProtoIMMessageEx::ProtoIMMessageEx()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMMessageEx)
}
ProtoIMMessageEx::ProtoIMMessageEx(const ProtoIMMessageEx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_uuid().empty()) {
    msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_uuid_);
  }
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender().empty()) {
    sender_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extra().empty()) {
    extra_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from._internal_has_conv()) {
    conv_ = new ::im::citylife::proto::ProtoIMConversationBase(*from.conv_);
  } else {
    conv_ = nullptr;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_status_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(msg_status_));
  clear_has_test_oneof();
  switch (from.test_oneof_case()) {
    case kText: {
      _internal_mutable_text()->::im::citylife::proto::ProtoIMMessageText::MergeFrom(from._internal_text());
      break;
    }
    case kImage: {
      _internal_mutable_image()->::im::citylife::proto::ProtoIMMessageImage::MergeFrom(from._internal_image());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMMessageEx)
}

void ProtoIMMessageEx::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMMessageEx_IM_2eproto.base);
  msg_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&conv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_status_) -
      reinterpret_cast<char*>(&conv_)) + sizeof(msg_status_));
  clear_has_test_oneof();
}

ProtoIMMessageEx::~ProtoIMMessageEx() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMMessageEx)
  SharedDtor();
}

void ProtoIMMessageEx::SharedDtor() {
  msg_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conv_;
  if (has_test_oneof()) {
    clear_test_oneof();
  }
}

void ProtoIMMessageEx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMMessageEx& ProtoIMMessageEx::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMMessageEx_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMMessageEx::clear_test_oneof() {
// @@protoc_insertion_point(one_of_clear_start:im.citylife.proto.ProtoIMMessageEx)
  switch (test_oneof_case()) {
    case kText: {
      delete test_oneof_.text_;
      break;
    }
    case kImage: {
      delete test_oneof_.image_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void ProtoIMMessageEx::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMMessageEx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && conv_ != nullptr) {
    delete conv_;
  }
  conv_ = nullptr;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_status_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(msg_status_));
  clear_test_oneof();
  _internal_metadata_.Clear();
}

const char* ProtoIMMessageEx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msg_uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageEx.msg_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMConversationBase conv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_conv(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sender = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageEx.sender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageEx.receiver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMMessageStatus msg_status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_msg_status(static_cast<::im::citylife::proto::ProtoIMMessageStatus>(val));
        } else goto handle_unusual;
        continue;
      // string extra = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_extra();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageEx.extra"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMMessageText text = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .im.citylife.proto.ProtoIMMessageImage image = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMMessageEx::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMMessageEx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_uuid = 1;
  if (this->msg_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_uuid().data(), static_cast<int>(this->_internal_msg_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageEx.msg_uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg_uuid(), target);
  }

  // .im.citylife.proto.ProtoIMConversationBase conv = 2;
  if (this->has_conv()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::conv(this), target, stream);
  }

  // string sender = 4;
  if (this->sender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageEx.sender");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sender(), target);
  }

  // string receiver = 5;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageEx.receiver");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receiver(), target);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_timestamp(), target);
  }

  // .im.citylife.proto.ProtoIMMessageStatus msg_status = 7;
  if (this->msg_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_msg_status(), target);
  }

  // string extra = 8;
  if (this->extra().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extra().data(), static_cast<int>(this->_internal_extra().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageEx.extra");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_extra(), target);
  }

  // .im.citylife.proto.ProtoIMMessageText text = 16;
  if (_internal_has_text()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::text(this), target, stream);
  }

  // .im.citylife.proto.ProtoIMMessageImage image = 17;
  if (_internal_has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::image(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMMessageEx)
  return target;
}

size_t ProtoIMMessageEx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMMessageEx)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_uuid = 1;
  if (this->msg_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_uuid());
  }

  // string sender = 4;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string receiver = 5;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  // string extra = 8;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extra());
  }

  // .im.citylife.proto.ProtoIMConversationBase conv = 2;
  if (this->has_conv()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conv_);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // .im.citylife.proto.ProtoIMMessageStatus msg_status = 7;
  if (this->msg_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_msg_status());
  }

  switch (test_oneof_case()) {
    // .im.citylife.proto.ProtoIMMessageText text = 16;
    case kText: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_oneof_.text_);
      break;
    }
    // .im.citylife.proto.ProtoIMMessageImage image = 17;
    case kImage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_oneof_.image_);
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMMessageEx::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMMessageEx)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMMessageEx* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMMessageEx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMMessageEx)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMMessageEx)
    MergeFrom(*source);
  }
}

void ProtoIMMessageEx::MergeFrom(const ProtoIMMessageEx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMMessageEx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_uuid().size() > 0) {

    msg_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_uuid_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.has_conv()) {
    _internal_mutable_conv()->::im::citylife::proto::ProtoIMConversationBase::MergeFrom(from._internal_conv());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.msg_status() != 0) {
    _internal_set_msg_status(from._internal_msg_status());
  }
  switch (from.test_oneof_case()) {
    case kText: {
      _internal_mutable_text()->::im::citylife::proto::ProtoIMMessageText::MergeFrom(from._internal_text());
      break;
    }
    case kImage: {
      _internal_mutable_image()->::im::citylife::proto::ProtoIMMessageImage::MergeFrom(from._internal_image());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
}

void ProtoIMMessageEx::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMMessageEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMMessageEx::CopyFrom(const ProtoIMMessageEx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMMessageEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMMessageEx::IsInitialized() const {
  return true;
}

void ProtoIMMessageEx::InternalSwap(ProtoIMMessageEx* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_uuid_.Swap(&other->msg_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_.Swap(&other->sender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extra_.Swap(&other->extra_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conv_, other->conv_);
  swap(timestamp_, other->timestamp_);
  swap(msg_status_, other->msg_status_);
  swap(test_oneof_, other->test_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMMessageEx::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMConversationBase::InitAsDefaultInstance() {
}
class ProtoIMConversationBase::_Internal {
 public:
};

ProtoIMConversationBase::ProtoIMConversationBase()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMConversationBase)
}
ProtoIMConversationBase::ProtoIMConversationBase(const ProtoIMConversationBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conv_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_conv_id().empty()) {
    conv_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conv_id_);
  }
  conv_type_ = from.conv_type_;
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMConversationBase)
}

void ProtoIMConversationBase::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMConversationBase_IM_2eproto.base);
  conv_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  conv_type_ = 0;
}

ProtoIMConversationBase::~ProtoIMConversationBase() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMConversationBase)
  SharedDtor();
}

void ProtoIMConversationBase::SharedDtor() {
  conv_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMConversationBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMConversationBase& ProtoIMConversationBase::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMConversationBase_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMConversationBase::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMConversationBase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conv_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  conv_type_ = 0;
  _internal_metadata_.Clear();
}

const char* ProtoIMConversationBase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string conv_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_conv_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMConversationBase.conv_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 conv_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          conv_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMConversationBase::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMConversationBase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv_id = 1;
  if (this->conv_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_conv_id().data(), static_cast<int>(this->_internal_conv_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMConversationBase.conv_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_conv_id(), target);
  }

  // int32 conv_type = 2;
  if (this->conv_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_conv_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMConversationBase)
  return target;
}

size_t ProtoIMConversationBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMConversationBase)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string conv_id = 1;
  if (this->conv_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_conv_id());
  }

  // int32 conv_type = 2;
  if (this->conv_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_conv_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMConversationBase::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMConversationBase)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMConversationBase* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMConversationBase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMConversationBase)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMConversationBase)
    MergeFrom(*source);
  }
}

void ProtoIMConversationBase::MergeFrom(const ProtoIMConversationBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMConversationBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conv_id().size() > 0) {

    conv_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conv_id_);
  }
  if (from.conv_type() != 0) {
    _internal_set_conv_type(from._internal_conv_type());
  }
}

void ProtoIMConversationBase::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMConversationBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMConversationBase::CopyFrom(const ProtoIMConversationBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMConversationBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMConversationBase::IsInitialized() const {
  return true;
}

void ProtoIMConversationBase::InternalSwap(ProtoIMConversationBase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  conv_id_.Swap(&other->conv_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conv_type_, other->conv_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMConversationBase::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMMessageText::InitAsDefaultInstance() {
}
class ProtoIMMessageText::_Internal {
 public:
};

ProtoIMMessageText::ProtoIMMessageText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMMessageText)
}
ProtoIMMessageText::ProtoIMMessageText(const ProtoIMMessageText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMMessageText)
}

void ProtoIMMessageText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMMessageText_IM_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtoIMMessageText::~ProtoIMMessageText() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMMessageText)
  SharedDtor();
}

void ProtoIMMessageText::SharedDtor() {
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMMessageText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMMessageText& ProtoIMMessageText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMMessageText_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMMessageText::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMMessageText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ProtoIMMessageText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageText.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMMessageText::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMMessageText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageText.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMMessageText)
  return target;
}

size_t ProtoIMMessageText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMMessageText)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMMessageText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMMessageText)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMMessageText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMMessageText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMMessageText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMMessageText)
    MergeFrom(*source);
  }
}

void ProtoIMMessageText::MergeFrom(const ProtoIMMessageText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMMessageText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void ProtoIMMessageText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMMessageText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMMessageText::CopyFrom(const ProtoIMMessageText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMMessageText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMMessageText::IsInitialized() const {
  return true;
}

void ProtoIMMessageText::InternalSwap(ProtoIMMessageText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMMessageText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMImage::InitAsDefaultInstance() {
}
class ProtoIMImage::_Internal {
 public:
};

ProtoIMImage::ProtoIMImage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMImage)
}
ProtoIMImage::ProtoIMImage(const ProtoIMImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_uuid().empty()) {
    image_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uuid_);
  }
  image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_url().empty()) {
    image_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  ::memcpy(&image_type_, &from.image_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_width_) -
    reinterpret_cast<char*>(&image_type_)) + sizeof(image_width_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMImage)
}

void ProtoIMImage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMImage_IM_2eproto.base);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_width_) -
      reinterpret_cast<char*>(&image_type_)) + sizeof(image_width_));
}

ProtoIMImage::~ProtoIMImage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMImage)
  SharedDtor();
}

void ProtoIMImage::SharedDtor() {
  image_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMImage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMImage& ProtoIMImage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMImage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMImage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMImage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_width_) -
      reinterpret_cast<char*>(&image_type_)) + sizeof(image_width_));
  _internal_metadata_.Clear();
}

const char* ProtoIMImage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string image_uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_image_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMImage.image_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 image_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          image_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 image_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          image_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 image_heigh = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          image_heigh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 image_width = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          image_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_image_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMImage.image_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMImage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMImage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_uuid = 1;
  if (this->image_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_uuid().data(), static_cast<int>(this->_internal_image_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMImage.image_uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_image_uuid(), target);
  }

  // int32 image_type = 2;
  if (this->image_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_image_type(), target);
  }

  // int32 image_size = 3;
  if (this->image_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_image_size(), target);
  }

  // int32 image_heigh = 4;
  if (this->image_heigh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_image_heigh(), target);
  }

  // int32 image_width = 5;
  if (this->image_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_image_width(), target);
  }

  // string image_url = 6;
  if (this->image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_url().data(), static_cast<int>(this->_internal_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMImage.image_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_image_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMImage)
  return target;
}

size_t ProtoIMImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMImage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image_uuid = 1;
  if (this->image_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_uuid());
  }

  // string image_url = 6;
  if (this->image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_url());
  }

  // int32 image_type = 2;
  if (this->image_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_image_type());
  }

  // int32 image_size = 3;
  if (this->image_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_image_size());
  }

  // int32 image_heigh = 4;
  if (this->image_heigh() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_image_heigh());
  }

  // int32 image_width = 5;
  if (this->image_width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_image_width());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMImage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMImage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMImage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMImage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMImage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMImage)
    MergeFrom(*source);
  }
}

void ProtoIMImage::MergeFrom(const ProtoIMImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_uuid().size() > 0) {

    image_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uuid_);
  }
  if (from.image_url().size() > 0) {

    image_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  if (from.image_type() != 0) {
    _internal_set_image_type(from._internal_image_type());
  }
  if (from.image_size() != 0) {
    _internal_set_image_size(from._internal_image_size());
  }
  if (from.image_heigh() != 0) {
    _internal_set_image_heigh(from._internal_image_heigh());
  }
  if (from.image_width() != 0) {
    _internal_set_image_width(from._internal_image_width());
  }
}

void ProtoIMImage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMImage::CopyFrom(const ProtoIMImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMImage::IsInitialized() const {
  return true;
}

void ProtoIMImage::InternalSwap(ProtoIMImage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  image_uuid_.Swap(&other->image_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_url_.Swap(&other->image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(image_type_, other->image_type_);
  swap(image_size_, other->image_size_);
  swap(image_heigh_, other->image_heigh_);
  swap(image_width_, other->image_width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMImage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoIMMessageImage::InitAsDefaultInstance() {
}
class ProtoIMMessageImage::_Internal {
 public:
};

ProtoIMMessageImage::ProtoIMMessageImage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMMessageImage)
}
ProtoIMMessageImage::ProtoIMMessageImage(const ProtoIMMessageImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      images_(from.images_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_uuid().empty()) {
    image_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uuid_);
  }
  local_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_path().empty()) {
    local_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_path_);
  }
  ::memcpy(&compress_level_, &from.compress_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&compress_level_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMMessageImage)
}

void ProtoIMMessageImage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMMessageImage_IM_2eproto.base);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&compress_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&compress_level_)) + sizeof(format_));
}

ProtoIMMessageImage::~ProtoIMMessageImage() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMMessageImage)
  SharedDtor();
}

void ProtoIMMessageImage::SharedDtor() {
  image_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoIMMessageImage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMMessageImage& ProtoIMMessageImage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMMessageImage_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMMessageImage::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMMessageImage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  image_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&compress_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&compress_level_)) + sizeof(format_));
  _internal_metadata_.Clear();
}

const char* ProtoIMMessageImage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string image_uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_image_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageImage.image_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string local_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_local_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "im.citylife.proto.ProtoIMMessageImage.local_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compress_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          compress_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 format = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          format_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .im.citylife.proto.ProtoIMImage images = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMMessageImage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMMessageImage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_uuid = 1;
  if (this->image_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_uuid().data(), static_cast<int>(this->_internal_image_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageImage.image_uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_image_uuid(), target);
  }

  // string local_path = 2;
  if (this->local_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_path().data(), static_cast<int>(this->_internal_local_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "im.citylife.proto.ProtoIMMessageImage.local_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_local_path(), target);
  }

  // int32 compress_level = 3;
  if (this->compress_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_compress_level(), target);
  }

  // int32 format = 4;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_format(), target);
  }

  // repeated .im.citylife.proto.ProtoIMImage images = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_images_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_images(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMMessageImage)
  return target;
}

size_t ProtoIMMessageImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMMessageImage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .im.citylife.proto.ProtoIMImage images = 5;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string image_uuid = 1;
  if (this->image_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_uuid());
  }

  // string local_path = 2;
  if (this->local_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_path());
  }

  // int32 compress_level = 3;
  if (this->compress_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compress_level());
  }

  // int32 format = 4;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMMessageImage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMMessageImage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMMessageImage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMMessageImage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMMessageImage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMMessageImage)
    MergeFrom(*source);
  }
}

void ProtoIMMessageImage::MergeFrom(const ProtoIMMessageImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMMessageImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  if (from.image_uuid().size() > 0) {

    image_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uuid_);
  }
  if (from.local_path().size() > 0) {

    local_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_path_);
  }
  if (from.compress_level() != 0) {
    _internal_set_compress_level(from._internal_compress_level());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
}

void ProtoIMMessageImage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMMessageImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMMessageImage::CopyFrom(const ProtoIMMessageImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMMessageImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMMessageImage::IsInitialized() const {
  return true;
}

void ProtoIMMessageImage::InternalSwap(ProtoIMMessageImage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  images_.InternalSwap(&other->images_);
  image_uuid_.Swap(&other->image_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_path_.Swap(&other->local_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(compress_level_, other->compress_level_);
  swap(format_, other->format_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMMessageImage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ProtoIMReturnResult_ResultEntry_DoNotUse::ProtoIMReturnResult_ResultEntry_DoNotUse() {}
ProtoIMReturnResult_ResultEntry_DoNotUse::ProtoIMReturnResult_ResultEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ProtoIMReturnResult_ResultEntry_DoNotUse::MergeFrom(const ProtoIMReturnResult_ResultEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMReturnResult_ResultEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ProtoIMReturnResult_ResultEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ProtoIMReturnResult::InitAsDefaultInstance() {
}
class ProtoIMReturnResult::_Internal {
 public:
};

ProtoIMReturnResult::ProtoIMReturnResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.citylife.proto.ProtoIMReturnResult)
}
ProtoIMReturnResult::ProtoIMReturnResult(const ProtoIMReturnResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.MergeFrom(from.result_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:im.citylife.proto.ProtoIMReturnResult)
}

void ProtoIMReturnResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoIMReturnResult_IM_2eproto.base);
  code_ = PROTOBUF_LONGLONG(0);
}

ProtoIMReturnResult::~ProtoIMReturnResult() {
  // @@protoc_insertion_point(destructor:im.citylife.proto.ProtoIMReturnResult)
  SharedDtor();
}

void ProtoIMReturnResult::SharedDtor() {
}

void ProtoIMReturnResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoIMReturnResult& ProtoIMReturnResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoIMReturnResult_IM_2eproto.base);
  return *internal_default_instance();
}


void ProtoIMReturnResult::Clear() {
// @@protoc_insertion_point(message_clear_start:im.citylife.proto.ProtoIMReturnResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  code_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ProtoIMReturnResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&result_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoIMReturnResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im.citylife.proto.ProtoIMReturnResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_code(), target);
  }

  // map<string, string> result = 2;
  if (!this->_internal_result().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "im.citylife.proto.ProtoIMReturnResult.ResultEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "im.citylife.proto.ProtoIMReturnResult.ResultEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_result().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_result().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_result().begin();
          it != this->_internal_result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ProtoIMReturnResult_ResultEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_result().begin();
          it != this->_internal_result().end(); ++it) {
        target = ProtoIMReturnResult_ResultEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im.citylife.proto.ProtoIMReturnResult)
  return target;
}

size_t ProtoIMReturnResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.citylife.proto.ProtoIMReturnResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> result = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_result_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_result().begin();
      it != this->_internal_result().end(); ++it) {
    total_size += ProtoIMReturnResult_ResultEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIMReturnResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im.citylife.proto.ProtoIMReturnResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIMReturnResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoIMReturnResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im.citylife.proto.ProtoIMReturnResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im.citylife.proto.ProtoIMReturnResult)
    MergeFrom(*source);
  }
}

void ProtoIMReturnResult::MergeFrom(const ProtoIMReturnResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.citylife.proto.ProtoIMReturnResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void ProtoIMReturnResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im.citylife.proto.ProtoIMReturnResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIMReturnResult::CopyFrom(const ProtoIMReturnResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.citylife.proto.ProtoIMReturnResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIMReturnResult::IsInitialized() const {
  return true;
}

void ProtoIMReturnResult::InternalSwap(ProtoIMReturnResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_.Swap(&other->result_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoIMReturnResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace citylife
}  // namespace im
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppConnectParam* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppConnectParam >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppConnectParam >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMBaseInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMBaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMDeviceInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMDeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMDeviceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMConfigInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMConfigInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMConfigInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppRecvMessage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppRecvMessage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppRecvMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppRecvMessages* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppRecvMessages >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppRecvMessages >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppSendMessage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppSendMessage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppSendMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppPushInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppPushInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppPushInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppSendMessageAsyncInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMAppDownloadFileInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMAppDownloadFileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMAppDownloadFileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMOfflinePushInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMOfflinePushInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMOfflinePushInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMSendMessageAsyncInfo* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMSendMessageAsyncInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMSendMessageAsyncInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMSendMessage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMSendMessage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMSendMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMMessage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMMessage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMConversation* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMConversation >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMConversation >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMConversations* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMConversations >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMConversations >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMMessageEx* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMMessageEx >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMMessageEx >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMConversationBase* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMConversationBase >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMConversationBase >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMMessageText* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMMessageText >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMMessageText >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMImage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMImage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMImage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMMessageImage* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMMessageImage >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMMessageImage >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMReturnResult_ResultEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::im::citylife::proto::ProtoIMReturnResult* Arena::CreateMaybeMessage< ::im::citylife::proto::ProtoIMReturnResult >(Arena* arena) {
  return Arena::CreateInternal< ::im::citylife::proto::ProtoIMReturnResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
